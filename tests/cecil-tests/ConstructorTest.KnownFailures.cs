using System.Collections.Generic;

#nullable enable

namespace Cecil.Tests {
	public partial class ConstructorTest {
		static HashSet<string> knownFailuresNonDefaultCtorDoesNotCallBaseDefaultCtor = new HashSet<string> {
			"AppKit.ActionDispatcher::.ctor(System.EventHandler)",
			"AppKit.NSAlertDidEndDispatcher::.ctor(System.Action`1<System.IntPtr>)",
			"AppKit.NSGradient::.ctor(AppKit.NSColor[],System.Single[],AppKit.NSColorSpace)",
			"AppKit.NSImage::.ctor(Foundation.NSData,System.Boolean)",
			"AppKit.NSImage::.ctor(System.String,System.Boolean)",
			"AppKit.NSTextContainer::.ctor(CoreGraphics.CGSize,System.Boolean)",
			"AVFoundation.AVAudioRecorder::.ctor(Foundation.NSUrl,AVFoundation.AudioSettings,Foundation.NSError&)",
			"AVFoundation.AVAudioRecorder::.ctor(Foundation.NSUrl,AVFoundation.AVAudioFormat,Foundation.NSError&)",
			"AVFoundation.InternalAVAudioSessionDelegate::.ctor(AVFoundation.AVAudioSession)",
			"CarPlay.CPListSection::.ctor(CarPlay.CPListItem[],System.String,System.String)",
			"CarPlay.CPListSection::.ctor(CarPlay.CPListItem[])",
			"CloudKit.CKSyncEngineFetchChangesScope::.ctor(Foundation.NSSet`1<CloudKit.CKRecordZoneID>,System.Boolean)",
			"CloudKit.CKSyncEngineSendChangesScope::.ctor(Foundation.NSSet`1<CloudKit.CKRecordZoneID>,System.Boolean)",
			"CloudKit.CKUserIdentityLookupInfo::.ctor(System.String,System.Int32)",
			"CoreAnimation.CALayer::.ctor(CoreAnimation.CALayer)",
			"Foundation.InternalNSNotificationHandler::.ctor(Foundation.NSNotificationCenter,System.Action`1<Foundation.NSNotification>)",
			"Foundation.NSActionDispatcher::.ctor(System.Action)",
			"Foundation.NSAppleEventDescriptor::.ctor(Foundation.NSAppleEventDescriptorType)",
			"Foundation.NSAsyncActionDispatcher::.ctor(System.Action)",
			"Foundation.NSAsyncSynchronizationContextDispatcher::.ctor(System.Threading.SendOrPostCallback,System.Object)",
			"Foundation.NSAttributedString::.ctor(Foundation.NSData,Foundation.NSAttributedStringDataType,Foundation.NSDictionary&)",
			"Foundation.NSHttpCookie::.ctor(System.Net.Cookie)",
			"Foundation.NSHttpCookie::.ctor(System.String,System.String,System.String,System.String)",
			"Foundation.NSMutableArray`1::.ctor(TValue[])",
			"Foundation.NSObject::.ctor(Foundation.NSObjectFlag)",
			"Foundation.NSObject::.ctor(ObjCRuntime.NativeHandle,System.Boolean)",
			"Foundation.NSString::.ctor(System.String,System.Int32,System.Int32)",
			"Foundation.NSString::.ctor(System.String)",
			"Foundation.NSSynchronizationContextDispatcher::.ctor(System.Threading.SendOrPostCallback,System.Object)",
			"Foundation.NSThread::.ctor(Foundation.NSObject,ObjCRuntime.Selector,Foundation.NSObject)",
			"Foundation.NSTimerActionDispatcher::.ctor(System.Action`1<Foundation.NSTimer>)",
			"Foundation.NSUserDefaults::.ctor(System.String,Foundation.NSUserDefaultsType)",
			"GameKit.GKScore::.ctor(System.String)",
			"GameplayKit.GKPath::.ctor(System.Numerics.Vector2[],System.Single,System.Boolean)",
			"GameplayKit.GKPath::.ctor(System.Numerics.Vector3[],System.Single,System.Boolean)",
			"HomeKit.HMMatterHome::.ctor(Foundation.NSCoder)",
			"HomeKit.HMMatterHome::.ctor(Foundation.NSObjectFlag)",
			"HomeKit.HMMatterHome::.ctor(Foundation.NSUuid,System.String)",
			"HomeKit.HMMatterHome::.ctor(ObjCRuntime.NativeHandle)",
			"HomeKit.HMMatterRequestHandler::.ctor(Foundation.NSObjectFlag)",
			"HomeKit.HMMatterRequestHandler::.ctor(ObjCRuntime.NativeHandle)",
			"HomeKit.HMMatterRoom::.ctor(Foundation.NSCoder)",
			"HomeKit.HMMatterRoom::.ctor(Foundation.NSObjectFlag)",
			"HomeKit.HMMatterRoom::.ctor(Foundation.NSUuid,System.String)",
			"HomeKit.HMMatterRoom::.ctor(ObjCRuntime.NativeHandle)",
			"HomeKit.HMMatterTopology::.ctor(Foundation.NSCoder)",
			"HomeKit.HMMatterTopology::.ctor(Foundation.NSObjectFlag)",
			"HomeKit.HMMatterTopology::.ctor(HomeKit.HMMatterHome[])",
			"HomeKit.HMMatterTopology::.ctor(ObjCRuntime.NativeHandle)",
			"Intents.INPriceRange::.ctor(Intents.INPriceRangeOption,Foundation.NSDecimalNumber,System.String)",
			"Intents.INSaveProfileInCarIntent::.ctor(Foundation.NSNumber,System.String)",
			"Intents.INSetProfileInCarIntent::.ctor(Foundation.NSNumber,System.String,Foundation.NSNumber)",
			"MapKit.MKMapCameraZoomRange::.ctor(System.Double,MapKit.MKMapCameraZoomRangeType)",
			"MapKit.MKPointOfInterestFilter::.ctor(MapKit.MKPointOfInterestCategory[],MapKit.MKPointOfInterestFilterType)",
			"ModelIO.MDLMesh::.ctor(ModelIO.MDLMesh,System.Int32,System.UInt32,ModelIO.IMDLMeshBufferAllocator)",
			"ModelIO.MDLMesh::.ctor(System.Numerics.Vector3,CoreGraphics.NVector2i,ModelIO.MDLGeometryType,ModelIO.IMDLMeshBufferAllocator)",
			"ModelIO.MDLMesh::.ctor(System.Numerics.Vector3,CoreGraphics.NVector2i,System.Boolean,ModelIO.MDLGeometryType,ModelIO.IMDLMeshBufferAllocator,System.Nullable`1<System.Int32>,System.Nullable`1<System.Boolean>,System.Nullable`1<System.Boolean>)",
			"ModelIO.MDLMesh::.ctor(System.Numerics.Vector3,CoreGraphics.NVector2i,System.Boolean,System.Boolean,System.Boolean,ModelIO.MDLGeometryType,ModelIO.IMDLMeshBufferAllocator)",
			"ModelIO.MDLMesh::.ctor(System.Numerics.Vector3,CoreGraphics.NVector3i,System.Boolean,ModelIO.MDLGeometryType,ModelIO.IMDLMeshBufferAllocator)",
			"ModelIO.MDLMesh::.ctor(System.Numerics.Vector3,System.Boolean,ModelIO.MDLGeometryType,ModelIO.IMDLMeshBufferAllocator)",
			"ModelIO.MDLNoiseTexture::.ctor(System.Single,System.String,CoreGraphics.NVector2i,ModelIO.MDLTextureChannelEncoding,ModelIO.MDLNoiseTextureType)",
			"NetworkExtension.NEHotspotConfiguration::.ctor(System.String,System.Boolean)",
			"NetworkExtension.NEHotspotConfiguration::.ctor(System.String,System.String,System.Boolean,System.Boolean)",
			"NetworkExtension.NEHotspotConfiguration::.ctor(System.String,System.String,System.Boolean)",
			"NetworkExtension.NEHotspotConfiguration::.ctor(System.String)",
			"SpriteKit.SKUniform::.ctor(System.String,System.Numerics.Vector2)",
			"SpriteKit.SKUniform::.ctor(System.String,System.Numerics.Vector3)",
			"SpriteKit.SKUniform::.ctor(System.String,System.Numerics.Vector4)",
			"SpriteKit.SKVideoNode::.ctor(Foundation.NSUrl)",
			"SpriteKit.SKVideoNode::.ctor(System.String)",
			"SpriteKit.SKWarpGeometryGrid::.ctor(System.IntPtr,System.IntPtr,System.Numerics.Vector2[],System.Numerics.Vector2[])",
			"UIKit.UIControlEventProxy::.ctor(UIKit.UIControl,System.EventHandler)",
			"UIKit.UIImageStatusDispatcher::.ctor(UIKit.UIImage/SaveStatus)",
			"UIKit.UIVideoStatusDispatcher::.ctor(UIKit.UIVideo/SaveStatus)",
		};
	}
}
