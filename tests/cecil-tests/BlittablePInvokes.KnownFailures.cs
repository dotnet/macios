using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using NUnit.Framework;
using Mono.Cecil;
using Mono.Cecil.Cil;

using ObjCRuntime;

using Xamarin.Tests;
using Xamarin.Utils;

#nullable enable

namespace Cecil.Tests {
	public partial class BlittablePInvokes {
		static HashSet<string> knownFailuresPInvokes = new HashSet<string> {
			"AudioToolbox.AudioConverterError AudioToolbox.AudioConverter::AudioConverterGetPropertyInfo(System.IntPtr,AudioToolbox.AudioConverterPropertyID,System.Int32&,System.Boolean&)",
			"AudioToolbox.AudioFileError AudioToolbox.AudioFile::AudioFileWritePackets(System.IntPtr,System.Boolean,System.Int32,AudioToolbox.AudioStreamPacketDescription[],System.Int64,System.Int32&,System.IntPtr)",
			"AudioToolbox.AudioFileStreamStatus AudioToolbox.AudioFileStream::AudioFileStreamGetPropertyInfo(System.IntPtr,AudioToolbox.AudioFileStreamProperty,System.Int32&,System.Boolean&)",
			"AudioToolbox.AudioQueueStatus AudioToolbox.AudioQueue::AudioQueueGetCurrentTime(System.IntPtr,System.IntPtr,AudioToolbox.AudioTimeStamp&,System.Boolean&)",
			"AudioToolbox.AudioQueueStatus AudioToolbox.AudioQueue::AudioQueueStop(System.IntPtr,System.Boolean)",
			"AudioToolbox.MusicPlayerStatus AudioToolbox.MusicPlayer::MusicPlayerIsPlaying(System.IntPtr,System.Boolean&)",
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentDescription ObjCRuntime.Messaging::AudioComponentDescription_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AudioUnit.AudioComponentStatus AudioUnit.AudioUnit::AudioOutputUnitPublish(AudioUnit.AudioComponentDescription,System.IntPtr,System.UInt32,System.IntPtr)",
			"AudioUnit.AudioUnitStatus AudioUnit.AudioUnit::AudioUnitGetPropertyInfo(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphAddNode(System.IntPtr,AudioUnit.AudioComponentDescription&,System.Int32&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsInitialized(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsOpen(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphIsRunning(System.IntPtr,System.Boolean&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphNodeInfo(System.IntPtr,System.Int32,AudioUnit.AudioComponentDescription&,System.IntPtr&)",
			"AudioUnit.AUGraphError AudioUnit.AUGraph::AUGraphUpdate(System.IntPtr,System.Boolean&)",
			"AudioUnit.ExtAudioFileError AudioUnit.ExtAudioFile::ExtAudioFileWrapAudioFileID(System.IntPtr,System.Boolean,System.IntPtr)",
			"AVFoundation.AVSampleCursorAudioDependencyInfo ObjCRuntime.Messaging::AVSampleCursorAudioDependencyInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorAudioDependencyInfo ObjCRuntime.Messaging::AVSampleCursorAudioDependencyInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorChunkInfo ObjCRuntime.Messaging::AVSampleCursorChunkInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSend(System.IntPtr,System.IntPtr)",
			"AVFoundation.AVSampleCursorSyncInfo ObjCRuntime.Messaging::AVSampleCursorSyncInfo_objc_msgSendSuper(System.IntPtr,System.IntPtr)",
			"CoreFoundation.CFRunLoopExitReason CoreFoundation.CFRunLoop::CFRunLoopRunInMode(System.IntPtr,System.Double,System.Boolean)",
			"CoreGraphics.CGAffineTransform CoreGraphics.CGPDFPage::CGPDFPageGetDrawingTransform(System.IntPtr,CoreGraphics.CGPDFBox,CoreGraphics.CGRect,System.Int32,System.Boolean)",
			"CoreGraphics.CGRect CoreMedia.CMFormatDescription::CMVideoFormatDescriptionGetCleanAperture(System.IntPtr,System.Boolean)",
			"CoreGraphics.CGSize CoreMedia.CMFormatDescription::CMVideoFormatDescriptionGetPresentationDimensions(System.IntPtr,System.Boolean,System.Boolean)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMAudioSampleBufferCreateWithPacketDescriptions(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMTime,AudioToolbox.AudioStreamPacketDescription[],System.IntPtr&)",
			"CoreMedia.CMSampleBufferError CoreMedia.CMSampleBuffer::CMSampleBufferCreateForImageBuffer(System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr,CoreMedia.CMSampleTimingInfo&,System.IntPtr&)",
			"GLKit.GLKVertexAttributeParameters GLKit.GLKVertexAttributeParameters::FromVertexFormat_(System.UIntPtr)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription_UInt32_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSend_AudioComponentDescription(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription_UInt32_ref_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle*)",
			"ObjCRuntime.NativeHandle ObjCRuntime.Messaging::NativeHandle_objc_msgSendSuper_AudioComponentDescription(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription)",
			"Security.SecStatusCode Security.SecTrust::SecTrustGetNetworkFetchAllowed(System.IntPtr,System.Boolean&)",
			"Security.SecStatusCode Security.SecTrust::SecTrustSetAnchorCertificatesOnly(System.IntPtr,System.Boolean)",
			"Security.SecStatusCode Security.SecTrust::SecTrustSetNetworkFetchAllowed(System.IntPtr,System.Boolean)",
			"Security.SslStatus Security.SslContext::SSLGetSessionOption(System.IntPtr,Security.SslSessionOption,System.Boolean&)",
			"Security.SslStatus Security.SslContext::SSLSetSessionOption(System.IntPtr,Security.SslSessionOption,System.Boolean)",
			"System.Boolean Accessibility.AXHearingUtilities::SupportsBidirectionalStreaming()",
			"System.Boolean AddressBook.ABAddressBook::ABAddressBookAddRecord(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABAddressBook::ABAddressBookHasUnsavedChanges(System.IntPtr)",
			"System.Boolean AddressBook.ABAddressBook::ABAddressBookRemoveRecord(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABAddressBook::ABAddressBookSave(System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABGroup::ABGroupAddMember(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABGroup::ABGroupRemoveMember(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABMultiValue::AddValueAndLabel(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32&)",
			"System.Boolean AddressBook.ABMultiValue::InsertValueAndLabelAtIndex(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Int32&)",
			"System.Boolean AddressBook.ABMultiValue::RemoveValueAndLabelAtIndex(System.IntPtr,System.IntPtr)",
			"System.Boolean AddressBook.ABMultiValue::ReplaceLabelAtIndex(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean AddressBook.ABMultiValue::ReplaceValueAtIndex(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean AddressBook.ABPerson::ABPersonHasImageData(System.IntPtr)",
			"System.Boolean AddressBook.ABPerson::ABPersonRemoveImageData(System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABPerson::ABPersonSetImageData(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean AddressBook.ABRecord::ABRecordRemoveValue(System.IntPtr,System.Int32,System.IntPtr&)",
			"System.Boolean AddressBook.ABRecord::ABRecordSetValue(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr&)",
			"System.Boolean AppKit.NSAccessibility::NSAccessibilitySetMayContainProtectedContent(System.Boolean)",
			"System.Boolean AppKit.NSGraphics::NSPlanarFromDepth(AppKit.NSWindowDepth)",
			"System.Boolean CFNetwork.CFHTTPAuthentication::CFHTTPAuthenticationAppliesToRequest(System.IntPtr,System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPAuthentication::CFHTTPAuthenticationIsValid(System.IntPtr,System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPAuthentication::CFHTTPAuthenticationRequiresAccountDomain(System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPAuthentication::CFHTTPAuthenticationRequiresOrderedRequests(System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPAuthentication::CFHTTPAuthenticationRequiresUserNameAndPassword(System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageAddAuthentication(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageAppendBytes(System.IntPtr,System.Byte[],System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageApplyCredentialDictionary(System.IntPtr,System.IntPtr,System.IntPtr,CFNetwork.CFHTTPMessage/CFStreamError&)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageApplyCredentials(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CFNetwork.CFHTTPMessage/CFStreamError&)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageIsHeaderComplete(System.IntPtr)",
			"System.Boolean CFNetwork.CFHTTPMessage::CFHTTPMessageIsRequest(System.IntPtr)",
			"System.Boolean CoreAnimation.CAFrameRateRange::IsEqualTo(CoreAnimation.CAFrameRateRange,CoreAnimation.CAFrameRateRange)",
			"System.Boolean CoreAnimation.CATransform3D::CATransform3DEqualToTransform(CoreAnimation.CATransform3D,CoreAnimation.CATransform3D)",
			"System.Boolean CoreAnimation.CATransform3D::CATransform3DIsAffine(CoreAnimation.CATransform3D)",
			"System.Boolean CoreAnimation.CATransform3D::CATransform3DIsIdentity(CoreAnimation.CATransform3D)",
			"System.Boolean CoreFoundation.CFBoolean::CFBooleanGetValue(System.IntPtr)",
			"System.Boolean CoreFoundation.CFBundle::CFBundleIsArchitectureLoadable(CoreFoundation.CFBundle/Architecture)",
			"System.Boolean CoreFoundation.CFBundle::CFBundleIsExecutableLoadable(System.IntPtr)",
			"System.Boolean CoreFoundation.CFBundle::CFBundleIsExecutableLoadableForURL(System.IntPtr)",
			"System.Boolean CoreFoundation.CFBundle::CFBundleIsExecutableLoaded(System.IntPtr)",
			"System.Boolean CoreFoundation.CFBundle::CFBundleLoadExecutableAndReturnError(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreFoundation.CFBundle::CFBundlePreflightExecutable(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreFoundation.CFDictionary::CFDictionaryContainsKey(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFDictionary::CFNumberGetValue(System.IntPtr,System.IntPtr,System.Int32&)",
			"System.Boolean CoreFoundation.CFDictionary::CFNumberGetValue(System.IntPtr,System.IntPtr,System.Int64&)",
			"System.Boolean CoreFoundation.CFMachPort::CFMachPortIsValid(System.IntPtr)",
			"System.Boolean CoreFoundation.CFMessagePort::CFMessagePortIsRemote(System.IntPtr)",
			"System.Boolean CoreFoundation.CFMessagePort::CFMessagePortIsValid(System.IntPtr)",
			"System.Boolean CoreFoundation.CFMessagePort::CFMessagePortSetName(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFMutableString::CFStringTransform(System.IntPtr,CoreFoundation.CFRange&,System.IntPtr,System.Boolean)",
			"System.Boolean CoreFoundation.CFMutableString::CFStringTransform(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean CoreFoundation.CFPreferences::CFPreferencesAppSynchronize(System.IntPtr)",
			"System.Boolean CoreFoundation.CFPreferences::CFPreferencesAppValueIsForced(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFPreferences::CFPreferencesGetAppBooleanValue(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFPropertyList::CFPropertyListIsValid(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFReadStream::CFReadStreamHasBytesAvailable(System.IntPtr)",
			"System.Boolean CoreFoundation.CFReadStream::CFReadStreamOpen(System.IntPtr)",
#if !NET8_0_OR_GREATER
			"System.Boolean CoreFoundation.CFReadStream::CFReadStreamSetClient(System.IntPtr,System.IntPtr,CoreFoundation.CFStream/CFStreamCallback,System.IntPtr)",
#endif
			"System.Boolean CoreFoundation.CFReadStream::CFReadStreamSetProperty(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFRunLoop::CFRunLoopContainsSource(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFRunLoop::CFRunLoopIsWaiting(System.IntPtr)",
			"System.Boolean CoreFoundation.CFRunLoopSource::CFRunLoopSourceIsValid(System.IntPtr)",
			"System.Boolean CoreFoundation.CFType::CFEqual(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreFoundation.CFUrl::CFURLIsFileReferenceURL(System.IntPtr)",
			"System.Boolean CoreFoundation.CFWriteStream::CFWriteStreamCanAcceptBytes(System.IntPtr)",
			"System.Boolean CoreFoundation.CFWriteStream::CFWriteStreamOpen(System.IntPtr)",
#if !NET8_0_OR_GREATER
			"System.Boolean CoreFoundation.CFWriteStream::CFWriteStreamSetClient(System.IntPtr,System.IntPtr,CoreFoundation.CFStream/CFStreamCallback,System.IntPtr)",
#endif
			"System.Boolean CoreFoundation.CFWriteStream::CFWriteStreamSetProperty(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean CoreGraphics.CGColor::CGColorEqualToColor(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceIsHDR(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceIsHLGBased(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceIsPQBased(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceIsWideGamutRGB(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceSupportsOutput(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceUsesExtendedRange(System.IntPtr)",
			"System.Boolean CoreGraphics.CGColorSpace::CGColorSpaceUsesITUR_2100TF(System.IntPtr)",
			"System.Boolean CoreGraphics.CGContext::CGContextIsPathEmpty(System.IntPtr)",
			"System.Boolean CoreGraphics.CGContext::CGContextPathContainsPoint(System.IntPtr,CoreGraphics.CGPoint,CoreGraphics.CGPathDrawingMode)",
			"System.Boolean CoreGraphics.CGDisplay::CGDisplayIsCaptured(System.UInt32)",
			"System.Boolean CoreGraphics.CGEvent::CGEventTapIsEnabled(System.IntPtr)",
			"System.Boolean CoreGraphics.CGEvent::PreflightListenEventAccess()",
			"System.Boolean CoreGraphics.CGEvent::PreflightPostEventAccess()",
			"System.Boolean CoreGraphics.CGEvent::RequestListenEventAccess()",
			"System.Boolean CoreGraphics.CGEvent::RequestPostEventAccess()",
			"System.Boolean CoreGraphics.CGEventSource::GetButtonState(CoreGraphics.CGEventSourceStateID,CoreGraphics.CGMouseButton)",
			"System.Boolean CoreGraphics.CGEventSource::GetKeyState(CoreGraphics.CGEventSourceStateID,System.UInt16)",
			"System.Boolean CoreGraphics.CGImage::CGImageGetShouldInterpolate(System.IntPtr)",
			"System.Boolean CoreGraphics.CGImage::CGImageIsMask(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPath::CGPathContainsPoint(System.IntPtr,CoreGraphics.CGAffineTransform*,CoreGraphics.CGPoint,System.Boolean)",
			"System.Boolean CoreGraphics.CGPath::CGPathEqualToPath(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreGraphics.CGPath::CGPathIntersectsPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean CoreGraphics.CGPath::CGPathIsEmpty(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPath::CGPathIsRect(System.IntPtr,CoreGraphics.CGRect&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayApplyBlock(System.IntPtr,ObjCRuntime.BlockLiteral*,System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetArray(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetBoolean(System.IntPtr,System.IntPtr,System.Boolean&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetDictionary(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetInteger(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetName(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetNumber(System.IntPtr,System.IntPtr,System.Runtime.InteropServices.NFloat&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetStream(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFArray::CGPDFArrayGetString(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetArray(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetBoolean(System.IntPtr,System.IntPtr,System.Boolean&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetDictionary(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetInteger(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetName(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetNumber(System.IntPtr,System.IntPtr,System.Runtime.InteropServices.NFloat&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetStream(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDictionary::CGPDFDictionaryGetString(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFDocument::CGPDFDocumentAllowsCopying(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFDocument::CGPDFDocumentAllowsPrinting(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFDocument::CGPDFDocumentIsEncrypted(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFDocument::CGPDFDocumentIsUnlocked(System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFDocument::CGPDFDocumentUnlockWithPassword(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreGraphics.CGPDFObject::CGPDFObjectGetNIntValue(System.IntPtr,CoreGraphics.CGPDFObjectType,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFObject::CGPDFObjectGetValue(System.IntPtr,CoreGraphics.CGPDFObjectType,System.Byte&)",
			"System.Boolean CoreGraphics.CGPDFObject::CGPDFObjectGetValue(System.IntPtr,CoreGraphics.CGPDFObjectType,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFObject::CGPDFObjectGetValue(System.IntPtr,CoreGraphics.CGPDFObjectType,System.Runtime.InteropServices.NFloat&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopArray(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopBoolean(System.IntPtr,System.Boolean&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopDictionary(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopInteger(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopName(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopNumber(System.IntPtr,System.Runtime.InteropServices.NFloat&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopObject(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopStream(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerPopString(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreGraphics.CGPDFScanner::CGPDFScannerScan(System.IntPtr)",
			"System.Boolean CoreGraphics.CGRectExtensions::CGRectIsInfinite(CoreGraphics.CGRect)",
			"System.Boolean CoreGraphics.CGRectExtensions::CGRectIsNull(CoreGraphics.CGRect)",
			"System.Boolean CoreGraphics.NativeDrawingMethods::CGPointMakeWithDictionaryRepresentation(System.IntPtr,CoreGraphics.CGPoint&)",
			"System.Boolean CoreGraphics.NativeDrawingMethods::CGRectMakeWithDictionaryRepresentation(System.IntPtr,CoreGraphics.CGRect&)",
			"System.Boolean CoreGraphics.NativeDrawingMethods::CGSizeMakeWithDictionaryRepresentation(System.IntPtr,CoreGraphics.CGSize&)",
			"System.Boolean CoreLocation.CLLocationCoordinate2D::CLLocationCoordinate2DIsValid(CoreLocation.CLLocationCoordinate2D)",
			"System.Boolean CoreMedia.CMBlockBuffer::CMBlockBufferIsEmpty(System.IntPtr)",
			"System.Boolean CoreMedia.CMBlockBuffer::CMBlockBufferIsRangeContiguous(System.IntPtr,System.UIntPtr,System.UIntPtr)",
			"System.Boolean CoreMedia.CMClock::CMClockMightDrift(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMClockOrTimebase::CMSyncMightDrift(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMFormatDescription::CMVideoFormatDescriptionMatchesImageBuffer(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreMedia.CMSampleBuffer::CMSampleBufferDataIsReady(System.IntPtr)",
			"System.Boolean CoreMedia.CMSampleBuffer::CMSampleBufferIsValid(System.IntPtr)",
			"System.Boolean CoreServices.FSEvent::FSEventsPurgeEventsForDeviceUpToEventId(System.UInt64,System.UInt64)",
			"System.Boolean CoreServices.FSEventStream::FSEventStreamStart(System.IntPtr)",
			"System.Boolean CoreText.CTFont::CTFontGetGlyphsForCharacters(System.IntPtr,System.Char[],System.UInt16[],System.IntPtr)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerIsSupportedFont(System.IntPtr)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterFontsForURL(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterFontsForURLs(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerRegisterGraphicsFont(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterFontsForURL(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterFontsForURLs(System.IntPtr,CoreText.CTFontManagerScope,System.IntPtr&)",
			"System.Boolean CoreText.CTFontManager::CTFontManagerUnregisterGraphicsFont(System.IntPtr,System.IntPtr&)",
			"System.Boolean CoreText.CTParagraphStyle::CTParagraphStyleGetValueForSpecifier(System.IntPtr,CoreText.CTParagraphStyleSpecifier,System.UIntPtr,System.Void*)",
			"System.Boolean CoreVideo.CVBuffer::CVBufferHasAttachment(System.IntPtr,System.IntPtr)",
			"System.Boolean CoreVideo.CVDisplayLink::CVDisplayLinkIsRunning(System.IntPtr)",
			"System.Boolean CoreVideo.CVImageBuffer::CVImageBufferIsFlipped(System.IntPtr)",
			"System.Boolean CoreVideo.CVMetalTexture::CVMetalTextureIsFlipped(System.IntPtr)",
			"System.Boolean CoreVideo.CVPixelBuffer::CVPixelBufferIsPlanar(System.IntPtr)",
			"System.Boolean CoreVideo.CVPixelFormatTypeExtensions::CVIsCompressedPixelFormatAvailable(System.UInt32)",
			"System.Boolean Foundation.NSObject::xamarin_set_gchandle_with_flags_safe(System.IntPtr,System.IntPtr,Foundation.NSObject/XamarinGCHandleFlags)",
			"System.Boolean GameController.GCExtendedGamepadSnapshot::GCExtendedGamepadSnapshotDataFromNSData(GameController.GCExtendedGamepadSnapshotData&,System.IntPtr)",
			"System.Boolean GameController.GCExtendedGamepadSnapshot::GCExtendedGamepadSnapShotDataV100FromNSData(GameController.GCExtendedGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean GameController.GCGamepadSnapshot::GCGamepadSnapShotDataV100FromNSData(GameController.GCGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean GameController.GCMicroGamepadSnapshot::GCMicroGamepadSnapshotDataFromNSData(GameController.GCMicroGamepadSnapshotData&,System.IntPtr)",
			"System.Boolean GameController.GCMicroGamepadSnapshot::GCMicroGamepadSnapShotDataV100FromNSData(GameController.GCMicroGamepadSnapShotDataV100&,System.IntPtr)",
			"System.Boolean HealthKit.HKAppleWalkingSteadiness::HKAppleWalkingSteadinessClassificationForQuantity(System.IntPtr,System.IntPtr&,System.IntPtr&)",
			"System.Boolean ImageIO.CGImageDestination::CGImageDestinationCopyImageSource(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean ImageIO.CGImageDestination::CGImageDestinationFinalize(System.IntPtr)",
			"System.Boolean ImageIO.CGMutableImageMetadata::CGImageMetadataRegisterNamespaceForPrefix(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean ImageIO.CGMutableImageMetadata::CGImageMetadataRemoveTagWithPath(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean ImageIO.CGMutableImageMetadata::CGImageMetadataSetTagWithPath(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean ImageIO.CGMutableImageMetadata::CGImageMetadataSetValueMatchingImageProperty(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean ImageIO.CGMutableImageMetadata::CGImageMetadataSetValueWithPath(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean MapKit.MKMapRect::Intersects(MapKit.MKMapRect,MapKit.MKMapRect)",
			"System.Boolean MapKit.MKMapRect::MKMapRectContainsPoint(MapKit.MKMapRect,MapKit.MKMapPoint)",
			"System.Boolean MapKit.MKMapRect::MKMapRectContainsRect(MapKit.MKMapRect,MapKit.MKMapRect)",
			"System.Boolean MapKit.MKMapRect::MKMapRectSpans180thMeridian(MapKit.MKMapRect)",
			"System.Boolean MediaAccessibility.MACaptionAppearance::MACaptionAppearanceAddSelectedLanguage(System.IntPtr,System.IntPtr)",
			"System.Boolean MediaAccessibility.MAImageCaptioning::MAImageCaptioningSetCaption(System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean MediaPlayer.MPVolumeSettings::AlertIsVisible()",
			"System.Boolean MetalPerformanceShaders.MPSKernel::MPSSupportsMTLDevice(System.IntPtr)",
			"System.Boolean MobileCoreServices.UTType::UTTypeConformsTo(System.IntPtr,System.IntPtr)",
			"System.Boolean MobileCoreServices.UTType::UTTypeEqual(System.IntPtr,System.IntPtr)",
			"System.Boolean MobileCoreServices.UTType::UTTypeIsDeclared(System.IntPtr)",
			"System.Boolean MobileCoreServices.UTType::UTTypeIsDynamic(System.IntPtr)",
			"System.Boolean Network.NWAdvertiseDescriptor::nw_advertise_descriptor_get_no_auto_rename(System.IntPtr)",
			"System.Boolean Network.NWBrowserDescriptor::nw_browse_descriptor_get_include_txt_record(System.IntPtr)",
			"System.Boolean Network.NWConnectionGroup::nw_connection_group_reinsert_extracted_connection(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWContentContext::nw_content_context_get_is_final(System.IntPtr)",
			"System.Boolean Network.NWEstablishmentReport::nw_establishment_report_get_proxy_configured(System.IntPtr)",
			"System.Boolean Network.NWEstablishmentReport::nw_establishment_report_get_used_proxy(System.IntPtr)",
			"System.Boolean Network.NWFramer::nw_framer_deliver_input_no_copy(System.IntPtr,System.UIntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean Network.NWFramer::nw_framer_parse_input(System.IntPtr,System.UIntPtr,System.UIntPtr,System.Byte*,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWFramer::nw_framer_parse_output(System.IntPtr,System.UIntPtr,System.UIntPtr,System.Byte*,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWFramer::nw_framer_prepend_application_protocol(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWFramer::nw_framer_write_output_no_copy(System.IntPtr,System.UIntPtr)",
			"System.Boolean Network.NWFramerMessage::nw_framer_message_access_value(System.IntPtr,System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWMulticastGroup::nw_group_descriptor_add_endpoint(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWMulticastGroup::nw_multicast_group_descriptor_get_disable_unicast_traffic(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_fast_open_enabled(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_include_peer_to_peer(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_local_only(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prefer_no_proxy(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prohibit_constrained(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_prohibit_expensive(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_get_reuse_local_address(System.IntPtr)",
			"System.Boolean Network.NWParameters::nw_parameters_requires_dnssec_validation(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_dns(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_ipv4(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_has_ipv6(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_constrained(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_is_expensive(System.IntPtr)",
			"System.Boolean Network.NWPath::nw_path_uses_interface_type(System.IntPtr,Network.NWInterfaceType)",
			"System.Boolean Network.NWProtocolDefinition::nw_protocol_definition_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_framer_message(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_ip(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_quic(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_tcp(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_tls(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_udp(System.IntPtr)",
			"System.Boolean Network.NWProtocolMetadata::nw_protocol_metadata_is_ws(System.IntPtr)",
			"System.Boolean Network.NWProtocolOptions::nw_protocol_options_is_quic(System.IntPtr)",
			"System.Boolean Network.NWProtocolQuicOptions::nw_quic_get_stream_is_datagram(System.IntPtr)",
			"System.Boolean Network.NWProtocolQuicOptions::nw_quic_get_stream_is_unidirectional(System.IntPtr)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_access_bytes(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_access_key(System.IntPtr,System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_apply(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWTxtRecord::nw_txt_record_is_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Network.NWWebSocketRequest::nw_ws_request_enumerate_additional_headers(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWWebSocketRequest::nw_ws_request_enumerate_subprotocols(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Network.NWWebSocketResponse::nw_ws_response_enumerate_additional_headers(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean ObjCRuntime.Class::class_addIvar(System.IntPtr,System.IntPtr,System.IntPtr,System.Byte,System.IntPtr)",
			"System.Boolean ObjCRuntime.Class::class_addMethod(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean ObjCRuntime.Class::class_addProperty(System.IntPtr,System.IntPtr,System.IntPtr*,System.Int32)",
			"System.Boolean ObjCRuntime.Class::class_addProtocol(System.IntPtr,System.IntPtr)",
			"System.Boolean ObjCRuntime.Selector::sel_isMapped(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexAddDocument(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean SearchKit.SKIndex::SKIndexAddDocumentWithText(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Boolean SearchKit.SKIndex::SKIndexCompact(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexFlush(System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexMoveDocument(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexRemoveDocument(System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKIndex::SKIndexRenameDocument(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SearchKit.SKSearch::SKSearchFindMatches(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr&)",
			"System.Boolean Security.SecIdentity2::sec_identity_access_certificates(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecKey::SecKeyIsAlgorithmSupported(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecKey::SecKeyVerifySignature(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr&)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_distinguished_names(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_ocsp_response(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_peer_certificate_chain(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_access_pre_shared_keys(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_challenge_parameters_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecProtocolMetadata::sec_protocol_metadata_peers_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecProtocolOptions::sec_protocol_options_are_equal(System.IntPtr,System.IntPtr)",
			"System.Boolean Security.SecTrust::SecTrustEvaluateWithError(System.IntPtr,System.IntPtr&)",
			"System.Boolean Security.SecTrust::SecTrustSetExceptions(System.IntPtr,System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNMarkPortalOffline(System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNMarkPortalOnline(System.IntPtr)",
			"System.Boolean SystemConfiguration.CaptiveNetwork::CNSetSupportedSSIDs(System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilityScheduleWithRunLoop(System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetCallback(System.IntPtr,method System.Void *(System.IntPtr,SystemConfiguration.NetworkReachabilityFlags,System.IntPtr),System.IntPtr)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetCallback(System.IntPtr,method System.Void *(System.IntPtr,SystemConfiguration.NetworkReachabilityFlags,System.IntPtr),SystemConfiguration.NetworkReachability/SCNetworkReachabilityContext&)",
			"System.Boolean SystemConfiguration.NetworkReachability::SCNetworkReachabilitySetDispatchQueue(System.IntPtr,System.IntPtr)",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityButtonShapesEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityDarkerSystemColorsEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsAssistiveTouchRunning()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsBoldTextEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsClosedCaptioningEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsGrayscaleEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsGuidedAccessEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsInvertColorsEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsMonoAudioEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsOnOffSwitchLabelsEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsReduceMotionEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsReduceTransparencyEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsShakeToUndoEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsSpeakScreenEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsSpeakSelectionEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsSwitchControlRunning()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsVideoAutoplayEnabled()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityIsVoiceOverRunning()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityPrefersCrossFadeTransitions()",
			"System.Boolean UIKit.UIAccessibility::UIAccessibilityShouldDifferentiateWithoutColor()",
			"System.Boolean UIKit.UIContentSizeCategoryExtensions::UIContentSizeCategoryIsAccessibilityCategory(System.IntPtr)",
			"System.Boolean UIKit.UIFloatRange::UIFloatRangeIsInfinite(UIKit.UIFloatRange)",
			"System.Boolean UIKit.UIVideo::UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(System.IntPtr)",
			"System.Boolean VideoToolbox.VTDecompressionSession::VTIsHardwareDecodeSupported(CoreMedia.CMVideoCodecType)",
			"System.Boolean Vision.VNUtils::IsIdentityRect(CoreGraphics.CGRect)",
			"System.Byte Security.SecProtocolMetadata::sec_protocol_metadata_access_supported_signature_algorithms(System.IntPtr,ObjCRuntime.BlockLiteral*)",
			"System.Char CoreFoundation.CFString::CFStringGetCharacterAtIndex(System.IntPtr,System.IntPtr)",
			"System.Int32 AudioToolbox.AudioFile::AudioFileReadBytes(System.IntPtr,System.Boolean,System.Int64,System.Int32&,System.IntPtr)",
			"System.Int32 AudioToolbox.AudioFile::AudioFileReadPacketData(System.IntPtr,System.Boolean,System.Int32&,AudioToolbox.AudioStreamPacketDescription*,System.Int64,System.Int32&,System.IntPtr)",
			"System.Int32 AudioToolbox.AudioFile::AudioFileWriteBytes(System.IntPtr,System.Boolean,System.Int64,System.Int32&,System.IntPtr)",
			"System.Int32 AudioToolbox.AudioQueue::AudioQueueDispose(System.IntPtr,System.Boolean)",
			"System.Int32 AudioUnit.AudioComponent::AudioComponentGetDescription(System.IntPtr,AudioUnit.AudioComponentDescription&)",
			"System.Int32 AudioUnit.AudioUnit::AudioUnitGetProperty(System.IntPtr,AudioUnit.AudioUnitPropertyIDType,AudioUnit.AudioUnitScopeType,System.UInt32,System.UInt32&,System.UInt32&)",
			"System.Int32 AudioUnit.ExtAudioFile::ExtAudioFileCreateWithUrl(System.IntPtr,AudioToolbox.AudioFileType,AudioToolbox.AudioStreamBasicDescription&,System.IntPtr,System.UInt32,System.IntPtr&)",
			"System.Int32 CoreMidi.MidiDevice::MIDIDeviceAddEntity(System.Int32,System.IntPtr,System.Boolean,System.UIntPtr,System.UIntPtr,System.Int32)",
			"System.Int32 CoreMidi.MidiObject::MIDIObjectGetProperties(System.Int32,System.IntPtr&,System.Boolean)",
			"System.Int32 Security.SslContext::SSLSetSessionTicketsEnabled(System.IntPtr,System.Boolean)",
			"System.IntPtr AddressBookUI.ABAddressFormatting::ABCreateStringWithAddressDictionary(System.IntPtr,System.Boolean)",
			"System.IntPtr AudioUnit.AudioComponent::AudioComponentFindNext(System.IntPtr,AudioUnit.AudioComponentDescription&)",
			"System.IntPtr CFNetwork.CFHTTPMessage::CFHTTPMessageCreateEmpty(System.IntPtr,System.Boolean)",
			"System.IntPtr CoreFoundation.CFMessagePort::CFMessagePortCreateLocal(System.IntPtr,System.IntPtr,method System.IntPtr *(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr),CoreFoundation.CFMessagePort/ContextProxy*,System.Boolean*)",
			"System.IntPtr CoreFoundation.CFUrl::CFURLCreateWithFileSystemPath(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGEvent::CGEventCreateKeyboardEvent(System.IntPtr,System.UInt16,System.Boolean)",
			"System.IntPtr CoreGraphics.CGImage::CGImageCreate(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,CoreGraphics.CGBitmapFlags,System.IntPtr,System.Runtime.InteropServices.NFloat*,System.Boolean,CoreGraphics.CGColorRenderingIntent)",
			"System.IntPtr CoreGraphics.CGImage::CGImageCreateWithJPEGDataProvider(System.IntPtr,System.Runtime.InteropServices.NFloat*,System.Boolean,CoreGraphics.CGColorRenderingIntent)",
			"System.IntPtr CoreGraphics.CGImage::CGImageCreateWithPNGDataProvider(System.IntPtr,System.Runtime.InteropServices.NFloat*,System.Boolean,CoreGraphics.CGColorRenderingIntent)",
			"System.IntPtr CoreGraphics.CGImage::CGImageMaskCreate(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Runtime.InteropServices.NFloat*,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyByIntersectingPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyByNormalizing(System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyBySubtractingPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyBySymmetricDifferenceOfPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyByUnioningPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyOfLineByIntersectingPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateCopyOfLineBySubtractingPath(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPath::CGPathCreateSeparateComponents(System.IntPtr,System.Boolean)",
			"System.IntPtr CoreGraphics.CGPattern::CGPatternCreate(System.IntPtr,CoreGraphics.CGRect,CoreGraphics.CGAffineTransform,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,CoreGraphics.CGPatternTiling,System.Boolean,CoreGraphics.CGPatternCallbacks&)",
			"System.IntPtr CoreGraphics.CGShading::CGShadingCreateAxial(System.IntPtr,CoreGraphics.CGPoint,CoreGraphics.CGPoint,System.IntPtr,System.Boolean,System.Boolean)",
			"System.IntPtr CoreGraphics.CGShading::CGShadingCreateRadial(System.IntPtr,CoreGraphics.CGPoint,System.Runtime.InteropServices.NFloat,CoreGraphics.CGPoint,System.Runtime.InteropServices.NFloat,System.IntPtr,System.Boolean,System.Boolean)",
			"System.IntPtr CoreMedia.CMSampleBuffer::CMSampleBufferGetSampleAttachmentsArray(System.IntPtr,System.Boolean)",
			"System.IntPtr CoreText.CTFontManager::CTFontManagerCopyRegisteredFontDescriptors(CoreText.CTFontManagerScope,System.Boolean)",
			"System.IntPtr Foundation.NSSearchPath::NSSearchPathForDirectoriesInDomains(System.UIntPtr,System.UIntPtr,System.Boolean)",
			"System.IntPtr Foundation.NSThread::xamarin_init_nsthread(System.IntPtr,System.Boolean,System.IntPtr,System.IntPtr,System.IntPtr)",
			"System.IntPtr GameController.GCExtendedGamepadSnapshotData::NSDataFromGCExtendedGamepadSnapshotData(GameController.GCExtendedGamepadSnapshotData&)",
			"System.IntPtr ObjCRuntime.Selector::GetHandle(System.String)",
			"System.IntPtr SearchKit.SKIndex::SKIndexOpenWithURL(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.IntPtr Security.SecPolicy::SecPolicyCreateSSL(System.Boolean,System.IntPtr)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddress(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&,System.IntPtr)",
			"System.IntPtr SystemConfiguration.NetworkReachability::SCNetworkReachabilityCreateWithAddressPair(System.IntPtr,SystemConfiguration.NetworkReachability/sockaddr_in&,SystemConfiguration.NetworkReachability/sockaddr_in&)",
			"System.Void AppKit.NSCell::NSDrawNinePartImage(CoreGraphics.CGRect,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Runtime.InteropServices.NFloat,System.Boolean)",
			"System.Void AppKit.NSCell::NSDrawThreePartImage(CoreGraphics.CGRect,System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean,System.IntPtr,System.Runtime.InteropServices.NFloat,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetAllowsAntialiasing(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetAllowsFontSmoothing(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetAllowsFontSubpixelPositioning(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetAllowsFontSubpixelQuantization(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetShouldAntialias(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetShouldSmoothFonts(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetShouldSubpixelPositionFonts(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGContext::CGContextSetShouldSubpixelQuantizeFonts(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGEvent::CGEventTapEnable(System.IntPtr,System.Boolean)",
			"System.Void CoreGraphics.CGPath::CGPathAddArc(System.IntPtr,CoreGraphics.CGAffineTransform*,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,System.Runtime.InteropServices.NFloat,System.Boolean)",
			"System.Void CoreMidi.MidiThruConnectionParams::MIDIThruConnectionParamsInitialize(CoreMidi.MidiThruConnectionParamsStruct&)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontDescriptors(System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontsWithAssetNames(System.IntPtr,System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void CoreText.CTFontManager::CTFontManagerRegisterFontURLs(System.IntPtr,CoreText.CTFontManagerScope,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void Foundation.NSObject::xamarin_release_managed_ref(System.IntPtr,System.Boolean)",
			"System.Void ImageIO.CGImageSource::CGImageSourceUpdateData(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Void ImageIO.CGImageSource::CGImageSourceUpdateDataProvider(System.IntPtr,System.IntPtr,System.Boolean)",
			"System.Void Network.NWAdvertiseDescriptor::nw_advertise_descriptor_set_no_auto_rename(System.IntPtr,System.Boolean)",
			"System.Void Network.NWBrowserDescriptor::nw_browse_descriptor_set_include_txt_record(System.IntPtr,System.Boolean)",
			"System.Void Network.NWConnection::nw_connection_send(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void Network.NWConnectionGroup::nw_connection_group_set_receive_handler(System.IntPtr,System.UInt32,System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void Network.NWContentContext::nw_content_context_set_is_final(System.IntPtr,System.Boolean)",
			"System.Void Network.NWFramer::nw_framer_deliver_input(System.IntPtr,System.Byte*,System.UIntPtr,System.IntPtr,System.Boolean)",
			"System.Void Network.NWMulticastGroup::nw_multicast_group_descriptor_set_disable_unicast_traffic(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_fast_open_enabled(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_include_peer_to_peer(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_local_only(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prefer_no_proxy(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prohibit_constrained(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_prohibit_expensive(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_requires_dnssec_validation(System.IntPtr,System.Boolean)",
			"System.Void Network.NWParameters::nw_parameters_set_reuse_local_address(System.IntPtr,System.Boolean)",
			"System.Void Network.NWPrivacyContext::nw_privacy_context_require_encrypted_name_resolution(System.IntPtr,System.Boolean,System.IntPtr)",
			"System.Void Network.NWProtocolIPOptions::nw_ip_options_set_disable_multicast_loopback(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_calculate_receive_time(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_disable_fragmentation(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_ip_options_set_use_minimum_mtu(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_disable_ack_stretching(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_disable_ecn(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_enable_fast_open(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_enable_keepalive(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_delay(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_options(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_no_push(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_tcp_options_set_retransmit_fin_drop(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolOptions::nw_udp_options_set_prefer_no_checksum(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolQuicOptions::nw_quic_set_stream_is_datagram(System.IntPtr,System.Boolean)",
			"System.Void Network.NWProtocolQuicOptions::nw_quic_set_stream_is_unidirectional(System.IntPtr,System.Boolean)",
			"System.Void Network.NWWebSocketOptions::nw_ws_options_set_auto_reply_ping(System.IntPtr,System.Boolean)",
			"System.Void Network.NWWebSocketOptions::nw_ws_options_set_skip_handshake(System.IntPtr,System.Boolean)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_AudioComponentDescription_UInt32_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_GCDualSenseAdaptiveTriggerPositionalAmplitudes_float(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalAmplitudes,System.Single)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_GCDualSenseAdaptiveTriggerPositionalResistiveStrengths(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalResistiveStrengths)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSend_NativeHandle_AudioComponentDescription_NativeHandle_UInt32(System.IntPtr,System.IntPtr,ObjCRuntime.NativeHandle,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle,System.UInt32)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_AudioComponentDescription_UInt32_NativeHandle(System.IntPtr,System.IntPtr,AudioUnit.AudioComponentDescription,System.UInt32,ObjCRuntime.NativeHandle)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_GCDualSenseAdaptiveTriggerPositionalAmplitudes_float(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalAmplitudes,System.Single)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_GCDualSenseAdaptiveTriggerPositionalResistiveStrengths(System.IntPtr,System.IntPtr,GameController.GCDualSenseAdaptiveTriggerPositionalResistiveStrengths)",
			"System.Void ObjCRuntime.Messaging::void_objc_msgSendSuper_NativeHandle_AudioComponentDescription_NativeHandle_UInt32(System.IntPtr,System.IntPtr,ObjCRuntime.NativeHandle,AudioUnit.AudioComponentDescription,ObjCRuntime.NativeHandle,System.UInt32)",
			"System.Void ObjCRuntime.Protocol::protocol_addMethodDescription(System.IntPtr,System.IntPtr,System.IntPtr,System.Boolean,System.Boolean)",
			"System.Void ObjCRuntime.Protocol::protocol_addProperty(System.IntPtr,System.IntPtr,System.IntPtr*,System.Int32,System.Boolean,System.Boolean)",
			"System.Void ObjCRuntime.Runtime::xamarin_switch_gchandle(System.IntPtr,System.Boolean)",
			"System.Void UIKit.UIAccessibility::UIAccessibilityRequestGuidedAccessSession(System.Boolean,ObjCRuntime.BlockLiteral*)",
			"System.Void UIKit.UIGraphics::BeginImageContextWithOptions(CoreGraphics.CGSize,System.Boolean,System.Runtime.InteropServices.NFloat)",
			"System.Void UIKit.UIGuidedAccessRestriction::UIGuidedAccessConfigureAccessibilityFeatures(System.UIntPtr,System.Boolean,ObjCRuntime.BlockLiteral*)",
		};
	}
}
