using System;
using System.IO;
using System.Collections.Generic;
using Xunit;
using Xunit.Abstractions;
using Microsoft.CSharp.RuntimeBinder.Tests;
using System.ComponentModel.Composition;
using System.Security.Cryptography.Algorithms.Tests;
using System.Data.SqlClient.Tests;
using System.Json.Tests;
using System.Net.Http.Tests;
using System.Numerics.Tests;
using System.Runtime.CompilerServices;
using System.Security.Cryptography.ProtectedDataTests;
using XLinqTests;
using System.Xml.Tests;
using System.Text.RegularExpressionsTests;


namespace Xamarin.iOS.UnitTests {
	// autogenerated class that uses types from the test assemblies so that
	// they are aot and not linked away.
	public static class RegisterType
	{
		public static bool IsXUnit = true;
		public static Dictionary <string, Type> TypesToRegister = new Dictionary <string, Type> {
			{ "xammac_Microsoft.CSharp_xunit-test.dll", typeof (Microsoft.CSharp.RuntimeBinder.Tests.AccessTests)}, 
			{ "xammac_System.ComponentModel.Composition_xunit-test.dll", typeof (System.ComponentModel.Composition.ITrans_ExportableTest)}, 
			{ "xammac_System.Core_xunit-test.dll", typeof (System.Security.Cryptography.Algorithms.Tests.IncrementalHashTests)}, 
			{ "xammac_System.Data_xunit-test.dll", typeof (System.Data.SqlClient.Tests.CloneTests)}, 
			{ "xammac_System.Json_xunit-test.dll", typeof (System.Json.Tests.JsonArrayTests)}, 
			{ "xammac_System.Net.Http.UnitTests_xunit-test.dll", typeof (System.Net.Http.Tests.DigestAuthenticationTests)}, 
			{ "xammac_System.Numerics_xunit-test.dll", typeof (System.Numerics.Tests.GenericVectorTests)}, 
			{ "xammac_System.Runtime.CompilerServices.Unsafe_xunit-test.dll", typeof (System.Runtime.CompilerServices.UnsafeTests)}, 
			{ "xammac_System.Security_xunit-test.dll", typeof (System.Security.Cryptography.ProtectedDataTests.ProtectedDataTests)}, 
			{ "xammac_System.Xml.Linq_xunit-test.dll", typeof (XLinqTests.TreeManipulationTests)}, 
			{ "xammac_System.Xml_xunit-test.dll", typeof (System.Xml.Tests.AppendTests)}, 
			{ "xammac_System_xunit-test.dll", typeof (System.Text.RegularExpressionsTests.PrecompiledRegexScenarioTest)}, 

		};

		public static void RegisterTypes () 
		{
			// line used to ensure that the runner is not remove by the linker :/
#if MONOMAC
			Console.WriteLine ($"Got the runner for the linker {typeof(Xunit.Sdk.AllException)}");
#else
			Console.WriteLine ($"Got the runner for the linker {typeof(Xunit.Sdk.TypeUtility)}");
#endif
			foreach (var a in TypesToRegister.Keys) {
				// do something with the type, so that it is not removed
				var assemblyPath = Path.GetFileName (TypesToRegister[a].Assembly.Location);
				Console.WriteLine ($"We are using type {TypesToRegister[a]} from assembly {assemblyPath}");
			}
		}
	}
}