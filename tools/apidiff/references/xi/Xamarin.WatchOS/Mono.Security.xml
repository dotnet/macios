<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="Mono.Security" version="2.0.5.0">
    <attributes>
      <attribute name="System.CLSCompliantAttribute">
        <properties>
          <property name="IsCompliant" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Diagnostics.DebuggableAttribute">
        <properties>
          <property name="IsJITTrackingEnabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="IsJITOptimizerDisabled" value="IgnoreSymbolStoreSequencePoints" />
          <property name="DebuggingFlags" value="IgnoreSymbolStoreSequencePoints" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCompanyAttribute">
        <properties>
          <property name="Company" value="MONO development team" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyCopyrightAttribute">
        <properties>
          <property name="Copyright" value="(c) 2003-2004 Various Authors" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDescriptionAttribute">
        <properties>
          <property name="Description" value="Mono.Security.dll" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="../mono.pub" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyProductAttribute">
        <properties>
          <property name="Product" value="MONO CLI" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyTitleAttribute">
        <properties>
          <property name="Title" value="Mono.Security.dll" />
        </properties>
      </attribute>
      <attribute name="System.Resources.NeutralResourcesLanguageAttribute">
        <properties>
          <property name="CultureName" value="en-US" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="System, PublicKey=00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="Mono.Security.Providers.NewTls, PublicKey=002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="Mono.Security.Providers.OldTls, PublicKey=002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="Mono.Security.Providers.DotNet, PublicKey=002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="Mono.Security.Providers.NewSystemSource, PublicKey=002400000480000094000000060200000024000052534131000400000100010079159977d2d03a8e6bea7a2e74e8d1afcc93e8851974952bb480a12c9134474d04062447c37e0e68c080536fcf3c3fbe2ff9c979ce998475e506e8ce82dd5b0f350dc10e93bf2eeecf874b24770c5081dbea7447fddafa277b22de47d6ffea449674a4f9fccf84d15069089380284dbdd35f46cdff12a1bd78e4ef0065d016df" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <properties>
          <property name="AssemblyName" value="Xamarin.BoringTls, PublicKey=002400000480000094000000060200000024000052534131000400001100000099dd12eda85767ae6f06023ee28e711c7e5a212462095c83868c29db75eddf6d8e296e03824c14fedd5f55553fed0b6173be3cc985a4b7f9fb7c83ccff8ba3938563b3d1f45a81122f12a1bcb73edcaad61a8456c7595a6da5184b4dd9d10f011b949ef1391fccfeab1ba62aa51c267ef8bd57ef1b6ba5a4c515d0badb81a78f" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
        <properties>
          <property name="WrapNonExceptionThrows" value="True" />
        </properties>
      </attribute>
      <attribute name="System.Runtime.InteropServices.ComVisibleAttribute">
        <properties>
          <property name="Value" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Mono.Math">
        <classes>
          <class name="BigInteger" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger)" attrib="6278">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="inData" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ui" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32[])" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="inData" position="0" attrib="0" type="System.UInt32[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="ul" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger+Sign, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="sign" position="0" attrib="0" type="Mono.Math.BigInteger+Sign" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Math.BigInteger, System.UInt32)" attrib="6278">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="len" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Add(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="BitCount()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="ClearBit(System.UInt32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Compare(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger+Sign">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Divid(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Divid(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GCD(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="GeneratePseudoPrime(System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateRandom(System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateRandom(System.Int32, System.Security.Cryptography.RandomNumberGenerator)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="rng" position="1" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Incr2()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="IsProbablePrime()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="LowestSetBit()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ModInverse(Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="modulus" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="ModPow(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="exp" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="n" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Modulus(Mono.Math.BigInteger, System.UInt32)" attrib="150" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Multiply(Mono.Math.BigInteger, System.Int32)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NextHighestPrime(Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="Parse(System.String)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="number" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Randomize()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Randomize(System.Security.Cryptography.RandomNumberGenerator)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rng" position="0" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                </parameters>
              </method>
              <method name="SetBit(System.UInt32)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="SetBit(System.UInt32, System.Boolean)" attrib="134" returntype="System.Void">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="value" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Subtract(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="150" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="TestBit(System.Int32)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TestBit(System.UInt32)" attrib="134" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bitNum" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
              <method name="ToString(System.UInt32)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="radix" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="ToString(System.UInt32, System.String)" attrib="134" returntype="System.String">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="radix" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="characterSet" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="op_Addition(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Division(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Division(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Equality(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Equality(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_GreaterThan(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_GreaterThanOrEqual(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Implicit(System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Implicit(System.UInt64)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Inequality(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.Boolean">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_LeftShift(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="shiftVal" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_LessThan(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_LessThanOrEqual(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Modulus(Mono.Math.BigInteger, System.UInt32)" attrib="2198" static="true" returntype="System.UInt32">
                <attributes>
                  <attribute name="System.CLSCompliantAttribute">
                    <properties>
                      <property name="IsCompliant" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="ui" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="op_Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
              <method name="op_Multiply(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="i" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_RightShift(Mono.Math.BigInteger, System.Int32)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="shiftVal" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="op_Subtraction(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="2198" static="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bi1" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="bi2" position="1" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="ModulusRing" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(Mono.Math.BigInteger)" attrib="6278">
                    <parameters>
                      <parameter name="modulus" position="0" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </constructor>
                </constructors>
                <methods>
                  <method name="BarrettReduction(Mono.Math.BigInteger)" attrib="134" returntype="System.Void">
                    <parameters>
                      <parameter name="x" position="0" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Difference(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="b" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Multiply(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="b" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Pow(Mono.Math.BigInteger, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <parameters>
                      <parameter name="a" position="0" attrib="0" type="Mono.Math.BigInteger" />
                      <parameter name="k" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                  <method name="Pow(System.UInt32, Mono.Math.BigInteger)" attrib="134" returntype="Mono.Math.BigInteger">
                    <attributes>
                      <attribute name="System.CLSCompliantAttribute">
                        <properties>
                          <property name="IsCompliant" value="False" />
                        </properties>
                      </attribute>
                    </attributes>
                    <parameters>
                      <parameter name="b" position="0" attrib="0" type="System.UInt32" />
                      <parameter name="exp" position="1" attrib="0" type="Mono.Math.BigInteger" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="Sign" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="Negative" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="-1" />
                  <field name="Positive" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="1" />
                  <field name="Zero" attrib="32854" fieldtype="Mono.Math.BigInteger+Sign" value="0" />
                </fields>
              </class>
            </classes>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Math.Prime">
        <classes>
          <class name="ConfidenceFactor" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="ExtraHigh" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="4" />
              <field name="ExtraLow" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="0" />
              <field name="High" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="3" />
              <field name="Low" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="1" />
              <field name="Medium" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="2" />
              <field name="Provable" attrib="32854" fieldtype="Mono.Math.Prime.ConfidenceFactor" value="5" />
            </fields>
          </class>
          <class name="PrimalityTest" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PrimalityTests" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="RabinMillerTest(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
              <method name="SmallPrimeSppTest(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
              <method name="Test(Mono.Math.BigInteger, Mono.Math.Prime.ConfidenceFactor)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="n" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="confidence" position="1" attrib="0" type="Mono.Math.Prime.ConfidenceFactor" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Math.Prime.Generator">
        <classes>
          <class name="NextPrimeFinder" type="class" base="Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GenerateSearchBase(System.Int32, System.Object)" attrib="196" virtual="true" is-override="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="Context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PrimeGeneratorBase" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Confidence" attrib="0" ptype="Mono.Math.Prime.ConfidenceFactor">
                <methods>
                  <method name="get_Confidence()" attrib="2502" virtual="true" returntype="Mono.Math.Prime.ConfidenceFactor">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PrimalityTest" attrib="0" ptype="Mono.Math.Prime.PrimalityTest">
                <methods>
                  <method name="get_PrimalityTest()" attrib="2502" virtual="true" returntype="Mono.Math.Prime.PrimalityTest">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrialDivisionBounds" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_TrialDivisionBounds()" attrib="2502" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GenerateNewPrime(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PostTrialDivisionTests(Mono.Math.BigInteger)" attrib="132" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SequentialSearchPrimeGeneratorBase" type="class" base="Mono.Math.Prime.Generator.PrimeGeneratorBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="GenerateNewPrime(System.Int32)" attrib="198" virtual="true" is-override="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GenerateNewPrime(System.Int32, System.Object)" attrib="454" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GenerateSearchBase(System.Int32, System.Object)" attrib="452" virtual="true" returntype="Mono.Math.BigInteger">
                <parameters>
                  <parameter name="bits" position="0" attrib="0" type="System.Int32" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="IsPrimeAcceptable(Mono.Math.BigInteger, System.Object)" attrib="452" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="bi" position="0" attrib="0" type="Mono.Math.BigInteger" />
                  <parameter name="context" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security">
        <classes>
          <class name="ASN1" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="tag" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte, System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="tag" position="0" attrib="0" type="System.Byte" />
                  <parameter name="data" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Count" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Count()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.ASN1" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Length()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Tag" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Tag()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Value(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.ASN1)" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="CompareValue(System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Decode(System.Byte[], System.Int32&amp;, System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="anPos" position="1" attrib="0" type="System.Int32&amp;" direction="ref" />
                  <parameter name="anLength" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="DecodeTLV(System.Byte[], System.Int32&amp;, out System.Byte&amp;, out System.Int32&amp;, out System.Byte[]&amp;)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="pos" position="1" attrib="0" type="System.Int32&amp;" direction="ref" />
                  <parameter name="tag" position="2" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="length" position="3" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="content" position="4" attrib="2" type="System.Byte[]&amp;" direction="out" />
                </parameters>
              </method>
              <method name="Element(System.Int32, System.Byte)" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="anTag" position="1" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Equals(System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="SaveToFile(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ASN1Convert" type="class" base="System.Object" sealed="true" abstract="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromDateTime(System.DateTime)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="dt" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="FromInt32(System.Int32)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromOid(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="FromUnsignedBigInteger(System.Byte[])" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="big" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ToDateTime(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.DateTime">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToInt32(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToOid(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PKCS7" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="AlgorithmIdentifier(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="AlgorithmIdentifier(System.String, Mono.Security.ASN1)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                  <parameter name="parameters" position="1" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="Attribute(System.String, Mono.Security.ASN1)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                  <parameter name="value" position="1" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="IssuerAndSerialNumber(Mono.Security.X509.X509Certificate)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="ContentInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Content" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_Content()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                      <method name="set_Content(Mono.Security.ASN1)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="Mono.Security.ASN1" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="ContentType" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_ContentType()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_ContentType(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="EncryptedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedContent" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedContent()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptionAlgorithm" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_EncryptionAlgorithm()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="EnvelopedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedContent" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedContent()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptionAlgorithm" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_EncryptionAlgorithm()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="RecipientInfos" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_RecipientInfos()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="Oid" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <fields>
                  <field name="contentType" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.3" />
                  <field name="countersignature" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.6" />
                  <field name="data" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.1" />
                  <field name="digestedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.5" />
                  <field name="encryptedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.6" />
                  <field name="envelopedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.3" />
                  <field name="messageDigest" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.4" />
                  <field name="rsaEncryption" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.1.1" />
                  <field name="signedAndEnvelopedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.4" />
                  <field name="signedData" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.7.2" />
                  <field name="signingTime" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.5" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="RecipientInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Issuer" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Issuer()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Key" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Key()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Oid" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Oid()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Serial" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Serial()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="SubjectKeyIdentifier" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SubjectKeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
              <class name="SignedData" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                    <methods>
                      <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="ContentInfo" attrib="0" ptype="Mono.Security.PKCS7+ContentInfo">
                    <methods>
                      <method name="get_ContentInfo()" attrib="2182" returntype="Mono.Security.PKCS7+ContentInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SignerInfo" attrib="0" ptype="Mono.Security.PKCS7+SignerInfo">
                    <methods>
                      <method name="get_SignerInfo()" attrib="2182" returntype="Mono.Security.PKCS7+SignerInfo">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="UseAuthenticatedAttributes" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_UseAuthenticatedAttributes()" attrib="2182" returntype="System.Boolean">
                        <parameters />
                      </method>
                      <method name="set_UseAuthenticatedAttributes(System.Boolean)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                    <parameters>
                      <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="SignerInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="AuthenticatedAttributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_AuthenticatedAttributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Certificate" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                    <methods>
                      <method name="get_Certificate()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                        <parameters />
                      </method>
                      <method name="set_Certificate(Mono.Security.X509.X509Certificate)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IssuerName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Key" attrib="0" ptype="System.Security.Cryptography.AsymmetricAlgorithm">
                    <methods>
                      <method name="get_Key()" attrib="2182" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                        <parameters />
                      </method>
                      <method name="set_Key(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Signature" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Signature(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="SubjectKeyIdentifier" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SubjectKeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="UnauthenticatedAttributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_UnauthenticatedAttributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Byte">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Byte">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="StrongName" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="keySize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.RSA)" attrib="6278">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanSign" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanSign()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicKey" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKey()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicKeyToken" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKeyToken()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TokenAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_TokenAlgorithm()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_TokenAlgorithm(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Hash(System.String)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Sign(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Verify(System.IO.Stream)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                </parameters>
              </method>
              <method name="Verify(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Authenticode">
        <classes>
          <class name="AuthenticodeBase" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="spcIndirectDataContext" attrib="32854" fieldtype="System.String" value="1.3.6.1.4.1.311.2.1.4" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="HashFile(System.String, System.String)" attrib="132" returntype="System.Byte[]">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                  <parameter name="hashName" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AuthenticodeDeformatter" type="class" base="Mono.Security.Authenticode.AuthenticodeBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="FileName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_FileName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_FileName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Reason" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Reason()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SigningCertificate" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                <methods>
                  <method name="get_SigningCertificate()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Timestamp" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_Timestamp()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="IsTrusted()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="AuthenticodeFormatter" type="class" base="Mono.Security.Authenticode.AuthenticodeBase" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Authority" attrib="0" ptype="Mono.Security.Authenticode.Authority">
                <methods>
                  <method name="get_Authority()" attrib="2182" returntype="Mono.Security.Authenticode.Authority">
                    <parameters />
                  </method>
                  <method name="set_Authority(Mono.Security.Authenticode.Authority)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Authenticode.Authority" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crl" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crl()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Description" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Description()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Description(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Hash(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="TimestampUrl" attrib="0" ptype="System.Uri">
                <methods>
                  <method name="get_TimestampUrl()" attrib="2182" returntype="System.Uri">
                    <parameters />
                  </method>
                  <method name="set_TimestampUrl(System.Uri)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Uri" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Url" attrib="0" ptype="System.Uri">
                <methods>
                  <method name="get_Url()" attrib="2182" returntype="System.Uri">
                    <parameters />
                  </method>
                  <method name="set_Url(System.Uri)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Uri" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ProcessTimestamp(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="response" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Sign(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Timestamp(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="fileName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="TimestampRequest(System.Byte[])" attrib="134" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="signature" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Authority" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Commercial" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="1" />
              <field name="Individual" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="0" />
              <field name="Maximum" attrib="32854" fieldtype="Mono.Security.Authenticode.Authority" value="2" />
            </fields>
          </class>
          <class name="PrivateKey" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String)" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Encrypted" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Encrypted()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyType" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeyType()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_KeyType(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2182" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Weak" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Weak()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Weak(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.PrivateKey">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateFromFile(System.String, System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.PrivateKey">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Save(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Save(System.String, System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SoftwarePublisherCertificate" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.Authenticode.SoftwarePublisherCertificate">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Cryptography">
        <classes>
          <class name="ARC4Managed" type="class" base="Mono.Security.Cryptography.RC4" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="CanReuseTransform" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanReuseTransform()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanTransformMultipleBlocks" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanTransformMultipleBlocks()" attrib="2534" virtual="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="InputBlockSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_InputBlockSize()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Key" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Key()" attrib="2246" virtual="true" is-override="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Key(System.Byte[])" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="OutputBlockSize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_OutputBlockSize()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateDecryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgbIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="CreateEncryptor(System.Byte[], System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.ICryptoTransform">
                <parameters>
                  <parameter name="rgbKey" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="rgbIV" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GenerateIV()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GenerateKey()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="TransformBlock(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32)" attrib="486" virtual="true" returntype="System.Int32">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="outputBuffer" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="outputOffset" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TransformFinalBlock(System.Byte[], System.Int32, System.Int32)" attrib="486" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="inputBuffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="inputOffset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="inputCount" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="~ARC4Managed()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BlockProcessor" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Security.Cryptography.ICryptoTransform)" attrib="6278">
                <parameters>
                  <parameter name="transform" position="0" attrib="0" type="System.Security.Cryptography.ICryptoTransform" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.ICryptoTransform, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="transform" position="0" attrib="0" type="System.Security.Cryptography.ICryptoTransform" />
                  <parameter name="blockSize" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Core(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Core(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="ib" position="1" attrib="0" type="System.Int32" />
                  <parameter name="cb" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Final()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="~BlockProcessor()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CryptoConvert" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromCapiKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPrivateKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlob(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlob(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlobDSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="FromCapiPublicKeyBlobDSA(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                <parameters>
                  <parameter name="blob" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="FromHex(System.String)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hex" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.AsymmetricAlgorithm, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keypair" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.DSA, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiKeyBlob(System.Security.Cryptography.RSA, System.Boolean)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="includePrivateKey" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ToCapiPrivateKeyBlob(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="ToCapiPrivateKeyBlob(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToCapiPublicKeyBlob(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="ToCapiPublicKeyBlob(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToHex(System.Byte[])" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="input" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DHKeyGeneration" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Random" attrib="32854" fieldtype="Mono.Security.Cryptography.DHKeyGeneration" value="0" />
              <field name="Static" attrib="32854" fieldtype="Mono.Security.Cryptography.DHKeyGeneration" value="1" />
            </fields>
          </class>
          <class name="DHParameters" type="struct" base="System.ValueType" sealed="true" serializable="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="G" attrib="6" fieldtype="System.Byte[]" />
              <field name="P" attrib="6" fieldtype="System.Byte[]" />
              <field name="X" attrib="134" fieldtype="System.Byte[]" />
            </fields>
          </class>
          <class name="DiffieHellman" type="class" base="System.Security.Cryptography.AsymmetricAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.DiffieHellman">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.DiffieHellman">
                <parameters>
                  <parameter name="algName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CreateKeyExchange()" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="DecryptKeyExchange(System.Byte[])" attrib="1478" abstract="true" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keyex" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="1478" abstract="true" virtual="true" returntype="Mono.Security.Cryptography.DHParameters">
                <parameters>
                  <parameter name="includePrivate" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="FromXmlString(System.String)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="xmlString" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ImportParameters(Mono.Security.Cryptography.DHParameters)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="Mono.Security.Cryptography.DHParameters" />
                </parameters>
              </method>
              <method name="ToXmlString(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DiffieHellmanManaged" type="class" base="Mono.Security.Cryptography.DiffieHellman" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[], System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="x" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[], System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="p" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="l" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32, System.Int32, Mono.Security.Cryptography.DHKeyGeneration)" attrib="6278">
                <parameters>
                  <parameter name="bitLength" position="0" attrib="0" type="System.Int32" />
                  <parameter name="l" position="1" attrib="0" type="System.Int32" />
                  <parameter name="method" position="2" attrib="0" type="Mono.Security.Cryptography.DHKeyGeneration" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateKeyExchange()" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="DecryptKeyExchange(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="keyEx" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="Mono.Security.Cryptography.DHParameters">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportParameters(Mono.Security.Cryptography.DHParameters)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="Mono.Security.Cryptography.DHParameters" />
                </parameters>
              </method>
              <method name="~DiffieHellmanManaged()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyBuilder" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="IV(System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Key(System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="KeyPairPersistence" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Security.Cryptography.CspParameters)" attrib="6278">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.CspParameters" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Security.Cryptography.CspParameters, System.String)" attrib="6278">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.CspParameters" />
                  <parameter name="keyPair" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Filename" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Filename()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyValue" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyValue()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_KeyValue(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Parameters" attrib="0" ptype="System.Security.Cryptography.CspParameters">
                <methods>
                  <method name="get_Parameters()" attrib="2182" returntype="System.Security.Cryptography.CspParameters">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Load()" attrib="134" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Remove()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Save()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MD2" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD2">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD2">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MD2Managed" type="class" base="Mono.Security.Cryptography.MD2" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="~MD2Managed()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MD4" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD4">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.MD4">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MD4Managed" type="class" base="Mono.Security.Cryptography.MD4" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="~MD4Managed()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="PKCS1" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="Decrypt_OAEP(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="C" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Decrypt_v15(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="C" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encode_v15(System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="emLength" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Encrypt_OAEP(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Security.Cryptography.RandomNumberGenerator, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="rng" position="2" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                  <parameter name="M" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encrypt_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.RandomNumberGenerator, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="rng" position="1" attrib="0" type="System.Security.Cryptography.RandomNumberGenerator" />
                  <parameter name="M" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="I2OSP(System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="I2OSP(System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Int32" />
                  <parameter name="size" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MGF1(System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Int32)" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="mgfSeed" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="maskLen" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="OS2IP(System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSADP(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="c" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSAEP(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="m" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSASP1(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="m" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="RSAVP1(System.Security.Cryptography.RSA, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="s" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Sign_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[])" attrib="150" static="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Verify_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Byte[])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="signature" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Verify_v15(System.Security.Cryptography.RSA, System.Security.Cryptography.HashAlgorithm, System.Byte[], System.Byte[], System.Boolean)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                  <parameter name="hash" position="1" attrib="0" type="System.Security.Cryptography.HashAlgorithm" />
                  <parameter name="hashValue" position="2" attrib="0" type="System.Byte[]" />
                  <parameter name="signature" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="tryNonStandardEncoding" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PKCS8" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetType(System.Byte[])" attrib="150" static="true" returntype="Mono.Security.Cryptography.PKCS8+KeyInfo">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="EncryptedPrivateKeyInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Algorithm" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Algorithm()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Algorithm(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="EncryptedData" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_EncryptedData()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_EncryptedData(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IterationCount" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Salt" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Salt()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Salt(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="KeyInfo" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="EncryptedPrivateKey" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="1" />
                  <field name="PrivateKey" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="0" />
                  <field name="Unknown" attrib="32854" fieldtype="Mono.Security.Cryptography.PKCS8+KeyInfo" value="2" />
                </fields>
              </class>
              <class name="PrivateKeyInfo" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.Byte[])" attrib="6278">
                    <parameters>
                      <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Algorithm" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Algorithm()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Algorithm(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Attributes" attrib="0" ptype="System.Collections.ArrayList">
                    <methods>
                      <method name="get_Attributes()" attrib="2182" returntype="System.Collections.ArrayList">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="PrivateKey" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_PrivateKey()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_PrivateKey(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Version" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Version()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_Version(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="DecodeDSA(System.Byte[], System.Security.Cryptography.DSAParameters)" attrib="150" static="true" returntype="System.Security.Cryptography.DSA">
                    <parameters>
                      <parameter name="privateKey" position="0" attrib="0" type="System.Byte[]" />
                      <parameter name="dsaParameters" position="1" attrib="0" type="System.Security.Cryptography.DSAParameters" />
                    </parameters>
                  </method>
                  <method name="DecodeRSA(System.Byte[])" attrib="150" static="true" returntype="System.Security.Cryptography.RSA">
                    <parameters>
                      <parameter name="keypair" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.DSA)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="dsa" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                    </parameters>
                  </method>
                  <method name="Encode(System.Security.Cryptography.RSA)" attrib="150" static="true" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="rsa" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="RC4" type="class" base="System.Security.Cryptography.SymmetricAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IV" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IV()" attrib="2246" virtual="true" is-override="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IV(System.Byte[])" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.RC4">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.RC4">
                <parameters>
                  <parameter name="algName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RSAManaged" type="class" base="System.Security.Cryptography.RSA" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="keySize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="IsCrtPossible" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCrtPossible()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeySize" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeySize()" attrib="2246" virtual="true" is-override="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PublicOnly" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_PublicOnly()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UseKeyBlinding" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_UseKeyBlinding()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_UseKeyBlinding(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="KeyGenerated" attrib="0" eventtype="Mono.Security.Cryptography.RSAManaged+KeyGeneratedEventHandler" />
            </events>
            <methods>
              <method name="DecryptValue(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EncryptValue(System.Byte[])" attrib="198" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="rgb" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="ExportParameters(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.Security.Cryptography.RSAParameters">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="ImportParameters(System.Security.Cryptography.RSAParameters)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="parameters" position="0" attrib="0" type="System.Security.Cryptography.RSAParameters" />
                </parameters>
              </method>
              <method name="ToXmlString(System.Boolean)" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters>
                  <parameter name="includePrivateParameters" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="~RSAManaged()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="KeyGeneratedEventHandler" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.ICloneable" />
                  <interface name="System.Runtime.Serialization.ISerializable" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                    <parameters>
                      <parameter name="object" position="0" attrib="0" type="System.Object" />
                      <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </constructor>
                </constructors>
                <methods>
                  <method name="BeginInvoke(System.Object, System.EventArgs, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                    <parameters>
                      <parameter name="sender" position="0" attrib="0" type="System.Object" />
                      <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                      <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                      <parameter name="object" position="3" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                  <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                    </parameters>
                  </method>
                  <method name="Invoke(System.Object, System.EventArgs)" attrib="454" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="sender" position="0" attrib="0" type="System.Object" />
                      <parameter name="e" position="1" attrib="0" type="System.EventArgs" />
                    </parameters>
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="SHA224" type="class" base="System.Security.Cryptography.HashAlgorithm" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Create()" attrib="150" static="true" returntype="Mono.Security.Cryptography.SHA224">
                <parameters />
              </method>
              <method name="Create(System.String)" attrib="150" static="true" returntype="Mono.Security.Cryptography.SHA224">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SHA224Managed" type="class" base="Mono.Security.Cryptography.SHA224" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Security.Cryptography.ICryptoTransform" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="HashCore(System.Byte[], System.Int32, System.Int32)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="start" position="1" attrib="0" type="System.Int32" />
                  <parameter name="length" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="HashFinal()" attrib="196" virtual="true" is-override="true" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="Initialize()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="~SHA224Managed()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Interface">
        <classes>
          <class name="BufferOffsetSize" type="class" base="Mono.Security.Interface.SecretParameters" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="Mono.Security.Interface.IBufferOffsetSize" />
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Buffer" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Buffer()" attrib="2534" virtual="true" returntype="System.Byte[]">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EndOffset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_EndOffset()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Offset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Offset()" attrib="2534" virtual="true" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Size()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetBuffer()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="SetBuffer(System.Byte[], System.Int32, System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="TruncateTo(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="newSize" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SecretParameters" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="CheckDisposed()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="Clear()" attrib="1476" abstract="true" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Clear(System.Byte[])" attrib="148" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="~SecretParameters()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SecureBuffer" type="class" base="Mono.Security.Interface.SecretParameters" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="Mono.Security.Interface.IBufferOffsetSize" />
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Buffer" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Buffer()" attrib="2534" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Size()" attrib="2534" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="CreateCopy(System.Byte[])" attrib="150" static="true" returntype="Mono.Security.Interface.SecureBuffer">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="StealBuffer()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TlsBuffer" type="class" base="Mono.Security.Interface.SecretParameters" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="EmptyArray" attrib="54" fieldtype="System.Byte[]" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.Interface.IBufferOffsetSize)" attrib="6278">
                <parameters>
                  <parameter name="bos" position="0" attrib="0" type="Mono.Security.Interface.IBufferOffsetSize" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Int32, System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Buffer" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Buffer()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="EndOffset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_EndOffset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Offset" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Offset()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Position()" attrib="2182" returntype="System.Int32">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int32)" attrib="2182" returntype="System.Void">
                    <attributes>
                      <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                    </attributes>
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Remaining" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Remaining()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Size" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Size()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Compare(Mono.Security.Interface.IBufferOffsetSize, Mono.Security.Interface.IBufferOffsetSize)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="buffer1" position="0" attrib="0" type="Mono.Security.Interface.IBufferOffsetSize" />
                  <parameter name="buffer2" position="1" attrib="0" type="Mono.Security.Interface.IBufferOffsetSize" />
                </parameters>
              </method>
              <method name="Compare(System.Byte[], System.Byte[])" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="buffer1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="buffer2" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Compare(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="buffer1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="buffer2" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="offset2" position="4" attrib="0" type="System.Int32" />
                  <parameter name="size2" position="5" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ConstantTimeCompare(System.Byte[], System.Int32, System.Int32, System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer1" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset1" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="buffer2" position="3" attrib="0" type="System.Byte[]" />
                  <parameter name="offset2" position="4" attrib="0" type="System.Int32" />
                  <parameter name="size2" position="5" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetRemaining()" attrib="134" returntype="Mono.Security.Interface.IBufferOffsetSize">
                <parameters />
              </method>
              <method name="MakeRoomInternal(System.Int32)" attrib="452" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="size" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadBuffer(System.Int32)" attrib="134" returntype="Mono.Security.Interface.TlsBuffer">
                <parameters>
                  <parameter name="length" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadByte()" attrib="134" returntype="System.Byte">
                <parameters />
              </method>
              <method name="ReadBytes(System.Int32)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="ReadInt16()" attrib="134" returntype="System.Int16">
                <parameters />
              </method>
              <method name="ReadInt24()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadInt32()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ReadSecureBuffer(System.Int32)" attrib="134" returntype="Mono.Security.Interface.SecureBuffer">
                <parameters>
                  <parameter name="count" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SetBuffer(System.Byte[], System.Int32, System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(Mono.Security.Interface.IBufferOffsetSize)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="Mono.Security.Interface.IBufferOffsetSize" />
                </parameters>
              </method>
              <method name="Write(System.Byte)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </method>
              <method name="Write(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Write(System.Int16)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="Write(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Write(System.UInt64)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt16(System.Byte[], System.Int32, System.Int16)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="value" position="2" attrib="0" type="System.Int16" />
                </parameters>
              </method>
              <method name="WriteInt24(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt24(System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="value" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt32(System.Byte[], System.Int32, System.Int32)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="value" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="WriteInt64(System.Byte[], System.Int32, System.UInt64)" attrib="150" static="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="value" position="2" attrib="0" type="System.UInt64" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TlsMultiBuffer" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsEmpty()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSingle" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSingle()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.Interface.TlsBuffer)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="Mono.Security.Interface.TlsBuffer" />
                </parameters>
              </method>
              <method name="Add(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Add(System.Byte[], System.Int32, System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="size" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetBuffer()" attrib="134" returntype="Mono.Security.Interface.BufferOffsetSize">
                <parameters />
              </method>
              <method name="GetBufferArray()" attrib="134" returntype="Mono.Security.Interface.BufferOffsetSize[]">
                <parameters />
              </method>
              <method name="StealBuffer()" attrib="134" returntype="Mono.Security.Interface.BufferOffsetSize">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.Protocol.Tls">
        <classes>
          <class name="CertificateSelectionCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="clientCertificates" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="targetHost" position="2" attrib="0" type="System.String" />
                  <parameter name="serverRequestedCertificates" position="3" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="callback" position="4" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="5" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Security.Cryptography.X509Certificates.X509CertificateCollection, System.Security.Cryptography.X509Certificates.X509Certificate, System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection)" attrib="454" virtual="true" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <parameters>
                  <parameter name="clientCertificates" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="targetHost" position="2" attrib="0" type="System.String" />
                  <parameter name="serverRequestedCertificates" position="3" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CertificateValidationCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Security.Cryptography.X509Certificates.X509Certificate, System.Int32[], System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="certificateErrors" position="1" attrib="0" type="System.Int32[]" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Security.Cryptography.X509Certificates.X509Certificate, System.Int32[])" attrib="454" virtual="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="certificateErrors" position="1" attrib="0" type="System.Int32[]" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CertificateValidationCallback2" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(Mono.Security.X509.X509CertificateCollection, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="Mono.Security.Interface.ValidationResult">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(Mono.Security.X509.X509CertificateCollection)" attrib="454" virtual="true" returntype="Mono.Security.Interface.ValidationResult">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CipherAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Des" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="0" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="1" />
              <field name="Rc2" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="2" />
              <field name="Rc4" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="3" />
              <field name="Rijndael" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="4" />
              <field name="SkipJack" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="5" />
              <field name="TripleDes" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.CipherAlgorithmType" value="6" />
            </fields>
          </class>
          <class name="ExchangeAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="DiffieHellman" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType" value="0" />
              <field name="Fortezza" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType" value="1" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType" value="2" />
              <field name="RsaKeyX" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType" value="3" />
              <field name="RsaSign" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType" value="4" />
            </fields>
          </class>
          <class name="HashAlgorithmType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Md5" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.HashAlgorithmType" value="0" />
              <field name="None" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.HashAlgorithmType" value="1" />
              <field name="Sha1" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.HashAlgorithmType" value="2" />
            </fields>
          </class>
          <class name="PrivateKeySelectionCallback" type="delegate" base="System.MulticastDelegate" sealed="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.Security.Cryptography.X509Certificates.X509Certificate, System.String, System.AsyncCallback, System.Object)" attrib="454" virtual="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="callback" position="2" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="3" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" virtual="true" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.Security.Cryptography.X509Certificates.X509Certificate, System.String)" attrib="454" virtual="true" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SecurityCompressionType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityCompressionType" value="0" />
              <field name="Zlib" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityCompressionType" value="1" />
            </fields>
          </class>
          <class name="SecurityProtocolType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Default" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="-1073741824" />
              <field name="Ssl2" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="12" />
              <field name="Ssl3" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="48" />
              <field name="Tls" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="192" />
              <field name="Tls11" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="768" />
              <field name="Tls12" attrib="32854" fieldtype="Mono.Security.Protocol.Tls.SecurityProtocolType" value="3072" />
            </fields>
          </class>
          <class name="SslClientStream" type="class" base="Mono.Security.Protocol.Tls.SslStreamBase" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.String, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="ownsStream" position="2" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.String, System.Security.Cryptography.X509Certificates.X509Certificate)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="clientCertificate" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.String, System.Security.Cryptography.X509Certificates.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="clientCertificates" position="2" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.String, System.Boolean, Mono.Security.Protocol.Tls.SecurityProtocolType)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="ownsStream" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="securityProtocolType" position="3" attrib="0" type="Mono.Security.Protocol.Tls.SecurityProtocolType" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.String, System.Boolean, Mono.Security.Protocol.Tls.SecurityProtocolType, System.Security.Cryptography.X509Certificates.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="targetHost" position="1" attrib="0" type="System.String" />
                  <parameter name="ownsStream" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="securityProtocolType" position="3" attrib="0" type="Mono.Security.Protocol.Tls.SecurityProtocolType" />
                  <parameter name="clientCertificates" position="4" attrib="0" type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ClientCertSelectionDelegate" attrib="0" ptype="Mono.Security.Protocol.Tls.CertificateSelectionCallback">
                <methods>
                  <method name="get_ClientCertSelectionDelegate()" attrib="2182" returntype="Mono.Security.Protocol.Tls.CertificateSelectionCallback">
                    <parameters />
                  </method>
                  <method name="set_ClientCertSelectionDelegate(Mono.Security.Protocol.Tls.CertificateSelectionCallback)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Tls.CertificateSelectionCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ClientCertificates" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
                <methods>
                  <method name="get_ClientCertificates()" attrib="2182" returntype="System.Security.Cryptography.X509Certificates.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PrivateKeyCertSelectionDelegate" attrib="0" ptype="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback">
                <methods>
                  <method name="get_PrivateKeyCertSelectionDelegate()" attrib="2182" returntype="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback">
                    <parameters />
                  </method>
                  <method name="set_PrivateKeyCertSelectionDelegate(Mono.Security.Protocol.Tls.PrivateKeySelectionCallback)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SelectedClientCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_SelectedClientCertificate()" attrib="2182" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ServerCertValidationDelegate" attrib="0" ptype="Mono.Security.Protocol.Tls.CertificateValidationCallback">
                <methods>
                  <method name="get_ServerCertValidationDelegate()" attrib="2182" returntype="Mono.Security.Protocol.Tls.CertificateValidationCallback">
                    <parameters />
                  </method>
                  <method name="set_ServerCertValidationDelegate(Mono.Security.Protocol.Tls.CertificateValidationCallback)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Tls.CertificateValidationCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ServerCertValidation2" attrib="0" eventtype="Mono.Security.Protocol.Tls.CertificateValidationCallback2" />
            </events>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="~SslClientStream()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SslServerStream" type="class" base="Mono.Security.Protocol.Tls.SslStreamBase" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.X509Certificates.X509Certificate)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.X509Certificates.X509Certificate, System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="clientCertificateRequired" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="ownsStream" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.X509Certificates.X509Certificate, System.Boolean, System.Boolean, Mono.Security.Protocol.Tls.SecurityProtocolType)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="clientCertificateRequired" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="ownsStream" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="securityProtocolType" position="4" attrib="0" type="Mono.Security.Protocol.Tls.SecurityProtocolType" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.X509Certificates.X509Certificate, System.Boolean, System.Boolean, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="clientCertificateRequired" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="requestClientCertificate" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="ownsStream" position="4" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IO.Stream, System.Security.Cryptography.X509Certificates.X509Certificate, System.Boolean, System.Boolean, System.Boolean, Mono.Security.Protocol.Tls.SecurityProtocolType)" attrib="6278">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="serverCertificate" position="1" attrib="0" type="System.Security.Cryptography.X509Certificates.X509Certificate" />
                  <parameter name="clientCertificateRequired" position="2" attrib="0" type="System.Boolean" />
                  <parameter name="requestClientCertificate" position="3" attrib="0" type="System.Boolean" />
                  <parameter name="ownsStream" position="4" attrib="0" type="System.Boolean" />
                  <parameter name="securityProtocolType" position="5" attrib="0" type="Mono.Security.Protocol.Tls.SecurityProtocolType" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ClientCertValidationDelegate" attrib="0" ptype="Mono.Security.Protocol.Tls.CertificateValidationCallback">
                <methods>
                  <method name="get_ClientCertValidationDelegate()" attrib="2182" returntype="Mono.Security.Protocol.Tls.CertificateValidationCallback">
                    <parameters />
                  </method>
                  <method name="set_ClientCertValidationDelegate(Mono.Security.Protocol.Tls.CertificateValidationCallback)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Tls.CertificateValidationCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="ClientCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_ClientCertificate()" attrib="2182" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PrivateKeyCertSelectionDelegate" attrib="0" ptype="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback">
                <methods>
                  <method name="get_PrivateKeyCertSelectionDelegate()" attrib="2182" returntype="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback">
                    <parameters />
                  </method>
                  <method name="set_PrivateKeyCertSelectionDelegate(Mono.Security.Protocol.Tls.PrivateKeySelectionCallback)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.Protocol.Tls.PrivateKeySelectionCallback" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <events>
              <event name="ClientCertValidation2" attrib="0" eventtype="Mono.Security.Protocol.Tls.CertificateValidationCallback2" />
            </events>
            <methods>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="~SslServerStream()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SslStreamBase" type="class" base="System.IO.Stream" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IO.Stream, System.Boolean)" attrib="6276">
                <parameters>
                  <parameter name="stream" position="0" attrib="0" type="System.IO.Stream" />
                  <parameter name="ownsStream" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CanRead" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanRead()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanSeek" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanSeek()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CanWrite" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CanWrite()" attrib="2246" virtual="true" is-override="true" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CheckCertRevocationStatus" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CheckCertRevocationStatus()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CheckCertRevocationStatus(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="CipherAlgorithm" attrib="0" ptype="Mono.Security.Protocol.Tls.CipherAlgorithmType">
                <methods>
                  <method name="get_CipherAlgorithm()" attrib="2182" returntype="Mono.Security.Protocol.Tls.CipherAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="CipherStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_CipherStrength()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashAlgorithm" attrib="0" ptype="Mono.Security.Protocol.Tls.HashAlgorithmType">
                <methods>
                  <method name="get_HashAlgorithm()" attrib="2182" returntype="Mono.Security.Protocol.Tls.HashAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="HashStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_HashStrength()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeAlgorithm" attrib="0" ptype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType">
                <methods>
                  <method name="get_KeyExchangeAlgorithm()" attrib="2182" returntype="Mono.Security.Protocol.Tls.ExchangeAlgorithmType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyExchangeStrength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_KeyExchangeStrength()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Length" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Length()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Position" attrib="0" ptype="System.Int64">
                <methods>
                  <method name="get_Position()" attrib="2246" virtual="true" is-override="true" returntype="System.Int64">
                    <parameters />
                  </method>
                  <method name="set_Position(System.Int64)" attrib="2246" virtual="true" is-override="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int64" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SecurityProtocol" attrib="0" ptype="Mono.Security.Protocol.Tls.SecurityProtocolType">
                <methods>
                  <method name="get_SecurityProtocol()" attrib="2182" returntype="Mono.Security.Protocol.Tls.SecurityProtocolType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ServerCertificate" attrib="0" ptype="System.Security.Cryptography.X509Certificates.X509Certificate">
                <methods>
                  <method name="get_ServerCertificate()" attrib="2182" returntype="System.Security.Cryptography.X509Certificates.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="BeginRead(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="BeginWrite(System.Byte[], System.Int32, System.Int32, System.AsyncCallback, System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="state" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="Close()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="EndRead(System.IAsyncResult)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="EndWrite(System.IAsyncResult)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="asyncResult" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Flush()" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Read(System.Byte[])" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Read(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Seek(System.Int64, System.IO.SeekOrigin)" attrib="198" virtual="true" is-override="true" returntype="System.Int64">
                <parameters>
                  <parameter name="offset" position="0" attrib="0" type="System.Int64" />
                  <parameter name="origin" position="1" attrib="0" type="System.IO.SeekOrigin" />
                </parameters>
              </method>
              <method name="SetLength(System.Int64)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </method>
              <method name="Write(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Write(System.Byte[], System.Int32, System.Int32)" attrib="198" virtual="true" is-override="true" returntype="System.Void">
                <parameters>
                  <parameter name="buffer" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="offset" position="1" attrib="0" type="System.Int32" />
                  <parameter name="count" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="~SslStreamBase()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.X509">
        <classes>
          <class name="PKCS12" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
            </interfaces>
            <fields>
              <field name="CryptoApiPasswordLimit" attrib="32854" fieldtype="System.Int32" value="32" />
              <field name="certBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.3" />
              <field name="crlBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.4" />
              <field name="keyBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.1" />
              <field name="pbeWithSHAAnd128BitRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.5" />
              <field name="pbeWithSHAAnd128BitRC4" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.1" />
              <field name="pbeWithSHAAnd2KeyTripleDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.4" />
              <field name="pbeWithSHAAnd3KeyTripleDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.3" />
              <field name="pbeWithSHAAnd40BitRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.6" />
              <field name="pbeWithSHAAnd40BitRC4" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.1.2" />
              <field name="pkcs8ShroudedKeyBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.2" />
              <field name="safeContentsBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.6" />
              <field name="sdsiCertificate" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.22.2" />
              <field name="secretBag" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.12.10.1.5" />
              <field name="x509Certificate" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.22.1" />
              <field name="x509Crl" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.23.1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Byte[], System.String)" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IterationCount" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Keys" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Keys()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="MaximumPasswordLength" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_MaximumPasswordLength()" attrib="2198" static="true" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_MaximumPasswordLength(System.Int32)" attrib="2198" static="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Password" attrib="0" ptype="System.String">
                <methods>
                  <method name="set_Password(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Secrets" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Secrets()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="AddCertificate(Mono.Security.X509.X509Certificate, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="AddKeyBag(System.Security.Cryptography.AsymmetricAlgorithm, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddPkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="AddPkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="AddSecretBag(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="AddSecretBag(System.Byte[], System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="attributes" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="Clone()" attrib="486" virtual="true" returntype="System.Object">
                <parameters />
              </method>
              <method name="Decrypt(Mono.Security.PKCS7+EncryptedData)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="ed" position="0" attrib="0" type="Mono.Security.PKCS7+EncryptedData" />
                </parameters>
              </method>
              <method name="Decrypt(System.String, System.Byte[], System.Int32, System.Byte[])" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="algorithmOid" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterationCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="encryptedData" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="Encrypt(System.String, System.Byte[], System.Int32, System.Byte[])" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="algorithmOid" position="0" attrib="0" type="System.String" />
                  <parameter name="salt" position="1" attrib="0" type="System.Byte[]" />
                  <parameter name="iterationCount" position="2" attrib="0" type="System.Int32" />
                  <parameter name="data" position="3" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetAsymmetricAlgorithm(System.Collections.IDictionary)" attrib="134" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="GetAttributes(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Collections.IDictionary">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="GetAttributes(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Collections.IDictionary">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetCertificate(System.Collections.IDictionary)" attrib="134" returntype="Mono.Security.X509.X509Certificate">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="GetSecret(System.Collections.IDictionary)" attrib="134" returntype="System.Byte[]">
                <parameters>
                  <parameter name="attrs" position="0" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="LoadFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.X509.PKCS12">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LoadFromFile(System.String, System.String)" attrib="150" static="true" returntype="Mono.Security.X509.PKCS12">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                  <parameter name="password" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="RemoveCertificate(Mono.Security.X509.X509Certificate, System.Collections.IDictionary)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="cert" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                  <parameter name="attrs" position="1" attrib="0" type="System.Collections.IDictionary" />
                </parameters>
              </method>
              <method name="RemoveKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="RemovePkcs8ShroudedKeyBag(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="RemoveSecretBag(System.Byte[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="secret" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="SaveToFile(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="~PKCS12()" attrib="196" virtual="true" returntype="System.Void">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="DeriveBytes" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
                <properties>
                  <property name="HashName" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_HashName()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_HashName(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="IterationCount" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_IterationCount()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                      <method name="set_IterationCount(System.Int32)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Int32" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Password" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Password()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Password(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                  <property name="Salt" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_Salt()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                      <method name="set_Salt(System.Byte[])" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="DeriveIV(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="DeriveKey(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="DeriveMAC(System.Int32)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="size" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
                <classes>
                  <class name="Purpose" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                    <interfaces>
                      <interface name="System.IComparable" />
                      <interface name="System.IConvertible" />
                      <interface name="System.IFormattable" />
                    </interfaces>
                    <fields>
                      <field name="IV" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="1" />
                      <field name="Key" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="0" />
                      <field name="MAC" attrib="32854" fieldtype="Mono.Security.X509.PKCS12+DeriveBytes+Purpose" value="2" />
                    </fields>
                  </class>
                </classes>
              </class>
            </classes>
          </class>
          <class name="PKCS5" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="pbeWithMD2AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.1" />
              <field name="pbeWithMD2AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.4" />
              <field name="pbeWithMD5AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.3" />
              <field name="pbeWithMD5AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.6" />
              <field name="pbeWithSHA1AndDESCBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.10" />
              <field name="pbeWithSHA1AndRC2CBC" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.5.11" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="PKCS9" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="friendlyName" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.20" />
              <field name="localKeyId" attrib="32854" fieldtype="System.String" value="1.2.840.113549.1.9.21" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="X501" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <methods>
              <method name="FromString(System.String)" attrib="150" static="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="rdn" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="ToString(Mono.Security.ASN1)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="seq" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </method>
              <method name="ToString(Mono.Security.ASN1, System.Boolean, System.String, System.Boolean)" attrib="150" static="true" returntype="System.String">
                <parameters>
                  <parameter name="seq" position="0" attrib="0" type="Mono.Security.ASN1" />
                  <parameter name="reversed" position="1" attrib="0" type="System.Boolean" />
                  <parameter name="separator" position="2" attrib="0" type="System.String" />
                  <parameter name="quotes" position="3" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Builder" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Hash" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Hash(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="GetOid(System.String)" attrib="132" returntype="System.String">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.DSA)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                </parameters>
              </method>
              <method name="Sign(System.Security.Cryptography.RSA)" attrib="454" virtual="true" returntype="System.Byte[]">
                <parameters>
                  <parameter name="key" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                </parameters>
              </method>
              <method name="ToBeSigned(System.String)" attrib="1476" abstract="true" virtual="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="hashName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Certificate" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="data" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="6276">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DSA" attrib="0" ptype="System.Security.Cryptography.DSA">
                <methods>
                  <method name="get_DSA()" attrib="2182" returntype="System.Security.Cryptography.DSA">
                    <parameters />
                  </method>
                  <method name="set_DSA(System.Security.Cryptography.DSA)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.DSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCurrent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCurrent()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSelfSigned" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsSelfSigned()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerUniqueIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IssuerUniqueIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_KeyAlgorithm()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="KeyAlgorithmParameters" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_KeyAlgorithmParameters()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_KeyAlgorithmParameters(System.Byte[])" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="PublicKey" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_PublicKey()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RSA" attrib="0" ptype="System.Security.Cryptography.RSA">
                <methods>
                  <method name="get_RSA()" attrib="2502" virtual="true" returntype="System.Security.Cryptography.RSA">
                    <parameters />
                  </method>
                  <method name="set_RSA(System.Security.Cryptography.RSA)" attrib="2502" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.RSA" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RawData" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_RawData()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SerialNumber()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithmParameters" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SignatureAlgorithmParameters()" attrib="2502" virtual="true" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SubjectName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SubjectName()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SubjectUniqueIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SubjectUniqueIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValidFrom" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValidFrom()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ValidUntil" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ValidUntil()" attrib="2502" virtual="true" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CheckSignature(System.Byte[], System.String, System.Byte[])" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="hash" position="0" attrib="0" type="System.Byte[]" />
                  <parameter name="hashAlgorithm" position="1" attrib="0" type="System.String" />
                  <parameter name="signature" position="2" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="GetIssuerName()" attrib="134" returntype="Mono.Security.ASN1">
                <parameters />
              </method>
              <method name="GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)" attrib="16838" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="info" position="0" attrib="0" type="System.Runtime.Serialization.SerializationInfo" />
                  <parameter name="context" position="1" attrib="0" type="System.Runtime.Serialization.StreamingContext" />
                </parameters>
              </method>
              <method name="GetSubjectName()" attrib="134" returntype="Mono.Security.ASN1">
                <parameters />
              </method>
              <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="WasCurrent(System.DateTime)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="instant" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509CertificateBuilder" type="class" base="Mono.Security.X509.X509Builder" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(System.Byte)" attrib="6278">
                <parameters>
                  <parameter name="version" position="0" attrib="0" type="System.Byte" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_IssuerName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="IssuerUniqueId" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_IssuerUniqueId()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_IssuerUniqueId(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NotAfter" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotAfter()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                  <method name="set_NotAfter(System.DateTime)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NotBefore" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotBefore()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                  <method name="set_NotBefore(System.DateTime)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.DateTime" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_SerialNumber(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SubjectName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_SubjectName(System.String)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectPublicKey" attrib="0" ptype="System.Security.Cryptography.AsymmetricAlgorithm">
                <methods>
                  <method name="get_SubjectPublicKey()" attrib="2182" returntype="System.Security.Cryptography.AsymmetricAlgorithm">
                    <parameters />
                  </method>
                  <method name="set_SubjectPublicKey(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SubjectUniqueId" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_SubjectUniqueId()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_SubjectUniqueId(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                  <method name="set_Version(System.Byte)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="ToBeSigned(System.String)" attrib="196" virtual="true" is-override="true" returntype="Mono.Security.ASN1">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509CertificateCollection" type="class" base="System.Collections.CollectionBase" serializable="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Certificate[])" attrib="6278">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Certificate" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="set_Item(System.Int32, Mono.Security.X509.X509Certificate)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                      <parameter name="value" position="1" attrib="0" type="Mono.Security.X509.X509Certificate" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509CertificateCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509Certificate[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                </parameters>
              </method>
              <method name="Contains(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="CopyTo(Mono.Security.X509.X509Certificate[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="Mono.Security.X509.X509Certificate[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetEnumerator()" attrib="134" returntype="Mono.Security.X509.X509CertificateCollection+X509CertificateEnumerator">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="IndexOf(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="value" position="1" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="X509CertificateEnumerator" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.Collections.IEnumerator" />
                </interfaces>
                <constructors>
                  <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                    <parameters>
                      <parameter name="mappings" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Current" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                    <methods>
                      <method name="get_Current()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="MoveNext()" attrib="134" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="Reset()" attrib="134" returntype="System.Void">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="X509Chain" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509CertificateCollection)" attrib="6278">
                <parameters>
                  <parameter name="chain" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Chain" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Chain()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Root" attrib="0" ptype="Mono.Security.X509.X509Certificate">
                <methods>
                  <method name="get_Root()" attrib="2182" returntype="Mono.Security.X509.X509Certificate">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Status" attrib="0" ptype="Mono.Security.X509.X509ChainStatusFlags">
                <methods>
                  <method name="get_Status()" attrib="2182" returntype="Mono.Security.X509.X509ChainStatusFlags">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustAnchors" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_TrustAnchors()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                  <method name="set_TrustAnchors(Mono.Security.X509.X509CertificateCollection)" attrib="18566" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Build(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="leaf" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="FindByIssuerName(System.String)" attrib="134" returntype="Mono.Security.X509.X509Certificate">
                <parameters>
                  <parameter name="issuerName" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LoadCertificate(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="LoadCertificates(Mono.Security.X509.X509CertificateCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509CertificateCollection" />
                </parameters>
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="X509ChainStatusFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="InvalidBasicConstraints" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="1024" />
              <field name="NoError" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="0" />
              <field name="NotSignatureValid" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="8" />
              <field name="NotTimeNested" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="2" />
              <field name="NotTimeValid" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="1" />
              <field name="PartialChain" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="65536" />
              <field name="UntrustedRoot" attrib="32854" fieldtype="Mono.Security.X509.X509ChainStatusFlags" value="32" />
            </fields>
          </class>
          <class name="X509Crl" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.Byte[])" attrib="6278">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Entries" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Entries()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                <methods>
                  <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Hash" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Hash()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsCurrent" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_IsCurrent()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IssuerName" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_IssuerName()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Crl+X509CrlEntry" params="System.Byte[]">
                <methods>
                  <method name="get_Item(System.Byte[])" attrib="2182" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                    <parameters>
                      <parameter name="serialNumber" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Crl+X509CrlEntry" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="NextUpdate" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NextUpdate()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RawData" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_RawData()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Signature" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Signature()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="SignatureAlgorithm" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_SignatureAlgorithm()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="ThisUpdate" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_ThisUpdate()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Version" attrib="0" ptype="System.Byte">
                <methods>
                  <method name="get_Version()" attrib="2182" returntype="System.Byte">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateFromFile(System.String)" attrib="150" static="true" returntype="Mono.Security.X509.X509Crl">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetCrlEntry(Mono.Security.X509.X509Certificate)" attrib="134" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="GetCrlEntry(System.Byte[])" attrib="134" returntype="Mono.Security.X509.X509Crl+X509CrlEntry">
                <parameters>
                  <parameter name="serialNumber" position="0" attrib="0" type="System.Byte[]" />
                </parameters>
              </method>
              <method name="VerifySignature(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="x509" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="VerifySignature(System.Security.Cryptography.AsymmetricAlgorithm)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="aa" position="0" attrib="0" type="System.Security.Cryptography.AsymmetricAlgorithm" />
                </parameters>
              </method>
              <method name="WasCurrent(System.DateTime)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="instant" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="X509CrlEntry" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <properties>
                  <property name="Extensions" attrib="0" ptype="Mono.Security.X509.X509ExtensionCollection">
                    <methods>
                      <method name="get_Extensions()" attrib="2182" returntype="Mono.Security.X509.X509ExtensionCollection">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="RevocationDate" attrib="0" ptype="System.DateTime">
                    <methods>
                      <method name="get_RevocationDate()" attrib="2182" returntype="System.DateTime">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="SerialNumber" attrib="0" ptype="System.Byte[]">
                    <methods>
                      <method name="get_SerialNumber()" attrib="2182" returntype="System.Byte[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="X509Extension" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="extnCritical" attrib="4" fieldtype="System.Boolean" />
              <field name="extnOid" attrib="4" fieldtype="System.String" />
              <field name="extnValue" attrib="4" fieldtype="Mono.Security.ASN1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6276">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                <methods>
                  <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Critical" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_Critical()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_Critical(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2502" virtual="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Oid" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Oid()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Value" attrib="0" ptype="Mono.Security.ASN1">
                <methods>
                  <method name="get_Value()" attrib="2182" returntype="Mono.Security.ASN1">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="452" virtual="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Equals(System.Object)" attrib="198" virtual="true" is-override="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" virtual="true" is-override="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="X509ExtensionCollection" type="class" base="System.Collections.CollectionBase" sealed="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.Collections.IList" />
            </interfaces>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Extension" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" attrib="2182" returntype="Mono.Security.X509.X509Extension">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="0" ptype="Mono.Security.X509.X509Extension" params="System.String">
                <methods>
                  <method name="get_Item(System.String)" attrib="2182" returntype="Mono.Security.X509.X509Extension">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Add(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509ExtensionCollection)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="collection" position="0" attrib="0" type="Mono.Security.X509.X509ExtensionCollection" />
                </parameters>
              </method>
              <method name="AddRange(Mono.Security.X509.X509Extension[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension[]" />
                </parameters>
              </method>
              <method name="Contains(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Contains(System.String)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="CopyTo(Mono.Security.X509.X509Extension[], System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extensions" position="0" attrib="0" type="Mono.Security.X509.X509Extension[]" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                <parameters />
              </method>
              <method name="IndexOf(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="IndexOf(System.String)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Insert(System.Int32, Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="index" position="0" attrib="0" type="System.Int32" />
                  <parameter name="extension" position="1" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Extension)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </method>
              <method name="Remove(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="oid" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509Store" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <properties>
              <property name="Certificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_Certificates()" attrib="2182" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Crls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_Crls()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2182" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Import(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Import(Mono.Security.X509.X509Crl)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="Mono.Security.X509.X509Crl" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Certificate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="certificate" position="0" attrib="0" type="Mono.Security.X509.X509Certificate" />
                </parameters>
              </method>
              <method name="Remove(Mono.Security.X509.X509Crl)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="crl" position="0" attrib="0" type="Mono.Security.X509.X509Crl" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="X509StoreManager" type="class" base="System.Object" sealed="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="CurrentUser" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_CurrentUser()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IntermediateCACertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_IntermediateCACertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IntermediateCACrls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_IntermediateCACrls()" attrib="2198" static="true" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="LocalMachine" attrib="0" ptype="Mono.Security.X509.X509Stores">
                <methods>
                  <method name="get_LocalMachine()" attrib="2198" static="true" returntype="Mono.Security.X509.X509Stores">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRootCACrls" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_TrustedRootCACrls()" attrib="2198" static="true" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRootCertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_TrustedRootCertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UntrustedCertificates" attrib="0" ptype="Mono.Security.X509.X509CertificateCollection">
                <methods>
                  <method name="get_UntrustedCertificates()" attrib="2198" static="true" returntype="Mono.Security.X509.X509CertificateCollection">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="X509Stores" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <properties>
              <property name="IntermediateCA" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_IntermediateCA()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="OtherPeople" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_OtherPeople()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Personal" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_Personal()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TrustedRoot" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_TrustedRoot()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Untrusted" attrib="0" ptype="Mono.Security.X509.X509Store">
                <methods>
                  <method name="get_Untrusted()" attrib="2182" returntype="Mono.Security.X509.X509Store">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Clear()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Open(System.String, System.Boolean)" attrib="134" returntype="Mono.Security.X509.X509Store">
                <parameters>
                  <parameter name="storeName" position="0" attrib="0" type="System.String" />
                  <parameter name="create" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="Names" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <fields>
                  <field name="IntermediateCA" attrib="32854" fieldtype="System.String" value="CA" />
                  <field name="OtherPeople" attrib="32854" fieldtype="System.String" value="AddressBook" />
                  <field name="Personal" attrib="32854" fieldtype="System.String" value="My" />
                  <field name="TrustedRoot" attrib="32854" fieldtype="System.String" value="Trust" />
                  <field name="Untrusted" attrib="32854" fieldtype="System.String" value="Disallowed" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
            </classes>
          </class>
          <class name="X520" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <classes>
              <class name="AttributeTypeAndValue" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.String, System.Int32)" attrib="6276">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                      <parameter name="upperBound" position="1" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, System.Int32, System.Byte)" attrib="6276">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                      <parameter name="upperBound" position="1" attrib="0" type="System.Int32" />
                      <parameter name="encoding" position="2" attrib="0" type="System.Byte" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="ASN1" attrib="0" ptype="Mono.Security.ASN1">
                    <methods>
                      <method name="get_ASN1()" attrib="2182" returntype="Mono.Security.ASN1">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Value" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Value()" attrib="2182" returntype="System.String">
                        <parameters />
                      </method>
                      <method name="set_Value(System.String)" attrib="2182" returntype="System.Void">
                        <parameters>
                          <parameter name="value" position="0" attrib="0" type="System.String" />
                        </parameters>
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="GetBytes()" attrib="134" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="GetBytes(System.Byte)" attrib="134" returntype="System.Byte[]">
                    <parameters>
                      <parameter name="encoding" position="0" attrib="0" type="System.Byte" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="CommonName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="CountryName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="DnQualifier" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="DomainComponent" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="EmailAddress" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="GivenName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Initial" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="LocalityName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Name" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Oid" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="oid" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
              </class>
              <class name="OrganizationName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="OrganizationalUnitName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="SerialNumber" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="StateOrProvinceName" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Surname" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="Title" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
              <class name="UserId" type="class" base="Mono.Security.X509.X520+AttributeTypeAndValue" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
              </class>
            </classes>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Security.X509.Extensions">
        <classes>
          <class name="AuthorityKeyIdentifierExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Identifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Identifier(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="BasicConstraintsExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <fields>
              <field name="NoPathLengthConstraint" attrib="32854" fieldtype="System.Int32" value="-1" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CertificateAuthority" attrib="0" ptype="System.Boolean">
                <methods>
                  <method name="get_CertificateAuthority()" attrib="2182" returntype="System.Boolean">
                    <parameters />
                  </method>
                  <method name="set_CertificateAuthority(System.Boolean)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="PathLenConstraint" attrib="0" ptype="System.Int32">
                <methods>
                  <method name="get_PathLenConstraint()" attrib="2182" returntype="System.Int32">
                    <parameters />
                  </method>
                  <method name="set_PathLenConstraint(System.Int32)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="CRLDistributionPointsExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DistributionPoints" attrib="0" ptype="System.Collections.Generic.IEnumerable`1[Mono.Security.X509.Extensions.CRLDistributionPointsExtension+DistributionPoint]">
                <methods>
                  <method name="get_DistributionPoints()" attrib="2182" returntype="System.Collections.Generic.IEnumerable`1[Mono.Security.X509.Extensions.CRLDistributionPointsExtension+DistributionPoint]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="DistributionPoint" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                    <parameters>
                      <parameter name="dp" position="0" attrib="0" type="Mono.Security.ASN1" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags, System.String)" attrib="6278">
                    <parameters>
                      <parameter name="dp" position="0" attrib="0" type="System.String" />
                      <parameter name="reasons" position="1" attrib="0" type="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" />
                      <parameter name="issuer" position="2" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="CRLIssuer" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_CRLIssuer()" attrib="2182" returntype="System.String">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Name" attrib="0" ptype="System.String">
                    <methods>
                      <method name="get_Name()" attrib="2182" returntype="System.String">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Reasons" attrib="0" ptype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags">
                    <methods>
                      <method name="get_Reasons()" attrib="2182" returntype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags">
                        <attributes>
                          <attribute name="System.Runtime.CompilerServices.CompilerGeneratedAttribute" />
                        </attributes>
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
              </class>
              <class name="ReasonFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <attributes>
                  <attribute name="System.FlagsAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="AACompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="8" />
                  <field name="AffiliationChanged" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="3" />
                  <field name="CACompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="2" />
                  <field name="CertificateHold" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="6" />
                  <field name="CessationOfOperation" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="5" />
                  <field name="KeyCompromise" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="1" />
                  <field name="PrivilegeWithdrawn" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="7" />
                  <field name="Superseded" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="4" />
                  <field name="Unused" attrib="32854" fieldtype="Mono.Security.X509.Extensions.CRLDistributionPointsExtension+ReasonFlags" value="0" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="CertificatePoliciesExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ExtendedKeyUsageExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyPurpose" attrib="0" ptype="System.Collections.ArrayList">
                <methods>
                  <method name="get_KeyPurpose()" attrib="2182" returntype="System.Collections.ArrayList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyAttributesExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyIdentifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_KeyIdentifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NotAfter" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotAfter()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="NotBefore" attrib="0" ptype="System.DateTime">
                <methods>
                  <method name="get_NotBefore()" attrib="2182" returntype="System.DateTime">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.KeyUsages)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyUsageExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="KeyUsage" attrib="0" ptype="Mono.Security.X509.Extensions.KeyUsages">
                <methods>
                  <method name="get_KeyUsage()" attrib="2182" returntype="Mono.Security.X509.Extensions.KeyUsages">
                    <parameters />
                  </method>
                  <method name="set_KeyUsage(Mono.Security.X509.Extensions.KeyUsages)" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.KeyUsages)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.KeyUsages" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="KeyUsages" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="cRLSign" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="2" />
              <field name="dataEncipherment" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="16" />
              <field name="decipherOnly" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="2048" />
              <field name="digitalSignature" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="128" />
              <field name="encipherOnly" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="1" />
              <field name="keyAgreement" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="8" />
              <field name="keyCertSign" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="4" />
              <field name="keyEncipherment" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="32" />
              <field name="nonRepudiation" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="64" />
              <field name="none" attrib="32854" fieldtype="Mono.Security.X509.Extensions.KeyUsages" value="0" />
            </fields>
          </class>
          <class name="NetscapeCertTypeExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Support(Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes)" attrib="134" returntype="System.Boolean">
                <parameters>
                  <parameter name="usage" position="0" attrib="0" type="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" />
                </parameters>
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
            <classes>
              <class name="CertTypes" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Int32">
                <attributes>
                  <attribute name="System.FlagsAttribute" />
                </attributes>
                <interfaces>
                  <interface name="System.IComparable" />
                  <interface name="System.IConvertible" />
                  <interface name="System.IFormattable" />
                </interfaces>
                <fields>
                  <field name="ObjectSigning" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="16" />
                  <field name="ObjectSigningCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="1" />
                  <field name="Smime" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="32" />
                  <field name="SmimeCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="2" />
                  <field name="SslCA" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="4" />
                  <field name="SslClient" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="128" />
                  <field name="SslServer" attrib="32854" fieldtype="Mono.Security.X509.Extensions.NetscapeCertTypeExtension+CertTypes" value="64" />
                </fields>
              </class>
            </classes>
          </class>
          <class name="PrivateKeyUsagePeriodExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SubjectAltNameExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String[], System.String[], System.String[], System.String[])" attrib="6278">
                <parameters>
                  <parameter name="rfc822" position="0" attrib="0" type="System.String[]" />
                  <parameter name="dnsNames" position="1" attrib="0" type="System.String[]" />
                  <parameter name="ipAddresses" position="2" attrib="0" type="System.String[]" />
                  <parameter name="uris" position="3" attrib="0" type="System.String[]" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="DNSNames" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_DNSNames()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IPAddresses" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_IPAddresses()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="RFC822" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_RFC822()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="UniformResourceIdentifiers" attrib="0" ptype="System.String[]">
                <methods>
                  <method name="get_UniformResourceIdentifiers()" attrib="2182" returntype="System.String[]">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SubjectKeyIdentifierExtension" type="class" base="Mono.Security.X509.X509Extension" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
              <constructor name=".ctor(Mono.Security.ASN1)" attrib="6278">
                <parameters>
                  <parameter name="asn1" position="0" attrib="0" type="Mono.Security.ASN1" />
                </parameters>
              </constructor>
              <constructor name=".ctor(Mono.Security.X509.X509Extension)" attrib="6278">
                <parameters>
                  <parameter name="extension" position="0" attrib="0" type="Mono.Security.X509.X509Extension" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Identifier" attrib="0" ptype="System.Byte[]">
                <methods>
                  <method name="get_Identifier()" attrib="2182" returntype="System.Byte[]">
                    <parameters />
                  </method>
                  <method name="set_Identifier(System.Byte[])" attrib="2182" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Byte[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Name" attrib="0" ptype="System.String">
                <methods>
                  <method name="get_Name()" attrib="2246" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Decode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="Encode()" attrib="196" virtual="true" is-override="true" returntype="System.Void">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
      <namespace name="Mono.Xml">
        <classes>
          <class name="MiniParser" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <fields>
              <field name="col" attrib="4" fieldtype="System.Int32" />
              <field name="errors" attrib="20" fieldtype="System.String[]" />
              <field name="line" attrib="4" fieldtype="System.Int32" />
              <field name="splitCData" attrib="4" fieldtype="System.Boolean" />
              <field name="twoCharBuff" attrib="4" fieldtype="System.Int32[]" />
            </fields>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="FatalErr(System.String)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="descr" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Parse(Mono.Xml.MiniParser+IReader, Mono.Xml.MiniParser+IHandler)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="reader" position="0" attrib="0" type="Mono.Xml.MiniParser+IReader" />
                  <parameter name="handler" position="1" attrib="0" type="Mono.Xml.MiniParser+IHandler" />
                </parameters>
              </method>
              <method name="Reset()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="StrEquals(System.String, System.Text.StringBuilder, System.Int32, System.Int32)" attrib="148" static="true" returntype="System.Boolean">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                  <parameter name="sb" position="1" attrib="0" type="System.Text.StringBuilder" />
                  <parameter name="sbStart" position="2" attrib="0" type="System.Int32" />
                  <parameter name="len" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Xlat(System.Int32, System.Int32)" attrib="148" static="true" returntype="System.Int32">
                <parameters>
                  <parameter name="charCode" position="0" attrib="0" type="System.Int32" />
                  <parameter name="state" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
            <classes>
              <class name="AttrListImpl" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <fields>
                  <field name="names" attrib="4" fieldtype="System.Collections.ArrayList" />
                  <field name="values" attrib="4" fieldtype="System.Collections.ArrayList" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(Mono.Xml.MiniParser+IAttrList)" attrib="6278">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.Int32)" attrib="6278">
                    <parameters>
                      <parameter name="initialCapacity" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_IsEmpty()" attrib="2534" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Length" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Length()" attrib="2534" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Names" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Names()" attrib="2534" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Values" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Values()" attrib="2534" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="Add(System.String, System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="ChangeValue(System.String, System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="newValue" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Clear()" attrib="486" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="CopyFrom(Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="GetName(System.Int32)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.Int32)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.String)" attrib="486" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Remove(System.Int32)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="Remove(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="HandlerAdapter" type="class" base="System.Object" charset="Ansi" layout="Auto">
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                </constructors>
                <methods>
                  <method name="OnChars(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="ch" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndElement(System.String)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                  <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IAttrList" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <properties>
                  <property name="IsEmpty" attrib="0" ptype="System.Boolean">
                    <methods>
                      <method name="get_IsEmpty()" attrib="3526" abstract="true" virtual="true" returntype="System.Boolean">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Length" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Length()" attrib="3526" abstract="true" virtual="true" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Names" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Names()" attrib="3526" abstract="true" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Values" attrib="0" ptype="System.String[]">
                    <methods>
                      <method name="get_Values()" attrib="3526" abstract="true" virtual="true" returntype="System.String[]">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="ChangeValue(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="newValue" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="GetName(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="GetValue(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.String">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IHandler" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <methods>
                  <method name="OnChars(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="ch" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndElement(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                  <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IMutableAttrList" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <methods>
                  <method name="Add(System.String, System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                      <parameter name="value" position="1" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                  <method name="Clear()" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters />
                  </method>
                  <method name="CopyFrom(Mono.Xml.MiniParser+IAttrList)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="attrs" position="0" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                    </parameters>
                  </method>
                  <method name="Remove(System.Int32)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="i" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                  <method name="Remove(System.String)" attrib="1478" abstract="true" virtual="true" returntype="System.Void">
                    <parameters>
                      <parameter name="name" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </class>
              <class name="IReader" type="interface" abstract="true" charset="Ansi" layout="Auto">
                <methods>
                  <method name="Read()" attrib="1478" abstract="true" virtual="true" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </class>
              <class name="XMLError" type="class" base="System.Exception" charset="Ansi" layout="Auto">
                <interfaces>
                  <interface name="System.Runtime.Serialization.ISerializable" />
                </interfaces>
                <fields>
                  <field name="column" attrib="4" fieldtype="System.Int32" />
                  <field name="descr" attrib="4" fieldtype="System.String" />
                  <field name="line" attrib="4" fieldtype="System.Int32" />
                </fields>
                <constructors>
                  <constructor name=".ctor()" attrib="6278">
                    <parameters />
                  </constructor>
                  <constructor name=".ctor(System.String)" attrib="6278">
                    <parameters>
                      <parameter name="descr" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </constructor>
                  <constructor name=".ctor(System.String, System.Int32, System.Int32)" attrib="6278">
                    <parameters>
                      <parameter name="descr" position="0" attrib="0" type="System.String" />
                      <parameter name="line" position="1" attrib="0" type="System.Int32" />
                      <parameter name="column" position="2" attrib="0" type="System.Int32" />
                    </parameters>
                  </constructor>
                </constructors>
                <properties>
                  <property name="Column" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Column()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                  <property name="Line" attrib="0" ptype="System.Int32">
                    <methods>
                      <method name="get_Line()" attrib="2182" returntype="System.Int32">
                        <parameters />
                      </method>
                    </methods>
                  </property>
                </properties>
                <methods>
                  <method name="ToString()" attrib="198" virtual="true" is-override="true" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </class>
            </classes>
          </class>
          <class name="SecurityParser" type="class" base="Mono.Xml.MiniParser" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.CLSCompliantAttribute">
                <properties>
                  <property name="IsCompliant" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="LoadXml(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="xml" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnChars(System.String)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="ch" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnEndElement(System.String)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="OnEndParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                </parameters>
              </method>
              <method name="OnStartElement(System.String, Mono.Xml.MiniParser+IAttrList)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="attrs" position="1" attrib="0" type="Mono.Xml.MiniParser+IAttrList" />
                </parameters>
              </method>
              <method name="OnStartParsing(Mono.Xml.MiniParser)" attrib="486" virtual="true" returntype="System.Void">
                <parameters>
                  <parameter name="parser" position="0" attrib="0" type="Mono.Xml.MiniParser" />
                </parameters>
              </method>
              <method name="Read()" attrib="486" virtual="true" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToXml()" attrib="134" returntype="System.Security.SecurityElement">
                <parameters />
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>