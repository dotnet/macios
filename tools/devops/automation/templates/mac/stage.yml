parameters:
# name of the pool that contains the iOS devices
- name: macPool
  type: string

- name: useImage
  type: boolean
  default: false

- name: stageName
  type: string

- name: displayName
  type: string

- name: statusContext
  type: string
  default: '10.16'

- name: keyringPass
  type: string

- name: demands
  type: object
  default: []

stages:
- stage: ${{ parameters.stageName }}
  displayName: ${{ parameters.displayName }}
  dependsOn:
  - build_packages
  # we need to have the pkgs built and the device sets to be ran, that is decided via the labels or type of build during the build_packages stage
  condition: succeeded()

  variables:
    MAC_TESTS_PRESENT: $[ dependencies.build_packages.outputs['macTestPkg.macTestsPresent'] ]

  jobs:
  - job: run_tests
    displayName: 'macOS tests'
    timeoutInMinutes: 1000
    workspace:
      clean: all

    pool:
      ${{ if eq(parameters.useImage, false) }}:
        name: ${{ parameters.macPool }}
        demands: ${{ parameters.demands }}
      ${{ else }}:
        vmImage: ${{ parameters.macPool }}

    steps:
    - template: build.yml
      parameters:
        statusContext: ${{ parameters.statusContext }}
        keyringPass: ${{ parameters.keyringPass }} 
