# common steps to download the artifacts from the test results.
parameters:

- name: testPrefix
  type: string 
  default: 'ios' # default context, since we started dealing with iOS devices. 

- name: downloadTestSummary
  type: boolean
  default: true

- name: downloadHtmlReport
  type: boolean
  default: true

- name: runTests
  type: boolean
  default: true

- name: label
  type: string

steps:

- ${{ if eq(parameters.runTests, true) }}:
  - ${{ if eq(parameters.downloadHtmlReport, true) }}:
    # Download the Html Report that was added by the tests job.
    - task: DownloadPipelineArtifact@2
      displayName: Download html report ${{ parameters.Label }}
      inputs:
        patterns: "HtmlReport-${{ parameters.testPrefix }}${{ replace(parameters.label, '-', '_') }}/HtmlReport.zip"
        allowFailedBuilds: true
        path: $(System.DefaultWorkingDirectory)/Reports

    # Unzip report.
    - task: ExtractFiles@1
      displayName: 'Extract HtmlReport'
      continueOnError: true # there might not be an html report, but we should continue processing other steps anyway
      inputs:
        archiveFilePatterns: "$(System.DefaultWorkingDirectory)/Reports/HtmlReport-${{ parameters.testPrefix }}${{ replace(parameters.label, '-', '_') }}/HtmlReport.zip"
        destinationFolder: "$(System.DefaultWorkingDirectory)/HtmlReport-${{ parameters.testPrefix }}${{ replace(parameters.label, '-', '_') }}"

  - ${{ if eq(parameters.downloadTestSummary, true) }}:
    # Download the test report to write the comment.
    - task: DownloadPipelineArtifact@2
      displayName: Download Test Summary ${{ parameters.label }}
      continueOnError: true # there are tests that do not have the test results, so far only the install_sources has it
      inputs:
        patterns: "TestSummary-${{ parameters.testPrefix }}${{ replace(parameters.label, '-', '_') }}/TestSummary.md"
        allowFailedBuilds: true
        path: $(System.DefaultWorkingDirectory)\Reports

  - powershell: |
      Get-ChildItem $(System.DefaultWorkingDirectory)\\Reports -Recurse
      $label="${{ replace(parameters.label, '-', '_') }}"
      Write-Host "##vso[task.setvariable variable=TEST_SUMMARY_PATH_$($label.ToUpper())]$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\Reports\TestSummary-${{ parameters.testPrefix }}$label\TestSummary.md"
      Write-Host "##vso[task.setvariable variable=HTML_REPORT_PATH_$($label.ToUpper())]$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\HtmlReport-${{ parameters.testPrefix }}$label"
    displayName: Publish artifact paths
    name: artifacts_${{ replace(parameters.label, '-', '_') }} # not to be confused with the displayName, this is used to later use the name of the step to access the output variables from an other job
