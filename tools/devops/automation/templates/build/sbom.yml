steps:
- checkout: none

# Download the Html Report that was added by the tests job.
- task: DownloadPipelineArtifact@2
  displayName: Download packages
  inputs:
    artifact: package
    path: "${{ variables.dropDirectoryPackage }}"

# Executive Order (EO): Software Bill of Materials (SBOM): https://www.1eswiki.com/wiki/ADO_sbom_Generator
- powershell: |
    $SBomStagingDirectory = "$(Build.ArtifactStagingDirectory)/SBomArtifacts"
    Write-Host "Creating SBOM staging directory: ${SBomStagingDirectory}"

    if (-not ([IO.Directory]::Exists($SBomStagingDirectory))) {
      [IO.Directory]::CreateDirectory($SBomStagingDirectory)
    }

    $pkgsPath = "${{ variables.dropDirectoryPackage }}"
    Write-Host "Packages path: ${pkgsPath}"

    $iOSPkg = Get-ChildItem -Path $pkgsPath -File -Force -Name xamarin.ios-*.pkg
    Write-Host "iOS PKG is ${iOSPkg}"

    $macPkg = Get-ChildItem -Path $pkgsPath -File -Force -Name xamarin.mac-*.pkg
    Write-Host "mac PKG is ${macPkg}"

    Write-Host "Staging DMG file: ${iOSPkg}"
    $pkgFilename = [IO.Path]::GetFileName($iOSPkg)
    $PKGPathAndFilename = [IO.Path]::Combine($SBomStagingDirectory, $pkgFilename)
    [IO.File]::Copy($iOSPkg, $PKGPathAndFilename)

    Write-Host "Staging DMG file: ${macPkg}"
    $pkgFilename = [IO.Path]::GetFileName($macPkg)
    $PKGPathAndFilename = [IO.Path]::Combine($SBomStagingDirectory, $pkgFilename)
    [IO.File]::Copy($macPkg, $PKGPathAndFilename)
  displayName: 'SBOM: Staging'

- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'SBOM: Generation'
  inputs:
    BuildDropPath: '$(Build.ArtifactStagingDirectory)/SBomArtifacts'

- powershell: |
    # The pkg files are already included under the drop-x64 and drop-arm locations
    # We only needed them temporarily here as a means to produce the Software Bill of Materials (SBOM) manifest
    # No need to include the pkg files (and duplicate them) in the SBOM drop
    $SBomStagingDirectory = "$(Build.ArtifactStagingDirectory)/SBomArtifacts"

    $pkgFiles = [IO.Directory]::GetFiles($SBomStagingDirectory, '*.pkg')
    $pkgFiles | foreach {
      Write-Host "Deleting PKG: $_"
      [IO.File]::Delete($_)
    }
  displayName: 'SBOM: Cleanup'

- task: PublishBuildArtifacts@1
  displayName: 'SBOM: Publish'
  inputs:
    artifactName: sbom
    pathToPublish: $(Build.ArtifactStagingDirectory)/SBomArtifacts
  condition: always()

