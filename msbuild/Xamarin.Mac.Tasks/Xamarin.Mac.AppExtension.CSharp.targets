<!--
***********************************************************************************************
Xamarin.Mac.AppExtension.CSharp.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
  created a backup copy.  Incorrect changes to this file will make it
  impossible to load or build your projects from the command-line or the IDE.

This file imports the version- and platform-specific targets for the project importing
this file. This file also defines targets to produce an error if the specified targets
file does not exist, but the project is built anyway (command-line or IDE build).

Copyright (C) 2014 Xamarin. All rights reserved.
***********************************************************************************************
-->
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets"
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).Before.targets')"/>

	<PropertyGroup>
		<!-- Version/fx properties -->
		<TargetFrameworkVersion Condition="'$(TargetFrameworkIdentifier)' == '' And '$(TargetFrameworkVersion)' ==''">v4.5</TargetFrameworkVersion>
		<!-- work around a bug in the Mono Microsoft.CSharp.Targets that defaults the compiler to gmcs -->
		<!-- this is fixed in mono/master (2014-03-05), but we'll keep this workaround here for a while -->
		<CscToolPath Condition="'$(OS)' == 'Unix'">/Library/Frameworks/Mono.framework/Commands</CscToolPath>
		<CscToolExe Condition="'$(OS)' == 'Unix'">mcs</CscToolExe>
		<!-- We default to *mcs compiler above, so, select the .mdb as the debug ext -->
		<CscDebugFileExt Condition="'$(OS)' == 'Unix'">.mdb</CscDebugFileExt>

		<DefineConstants>__UNIFIED__;$(DefineConstants)</DefineConstants>
	</PropertyGroup>

	<Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
	<Import Project="Xamarin.Mac.AppExtension.Common.targets" />

	<Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets"
			Condition="Exists('$(MSBuildThisFileDirectory)$(MSBuildThisFileName).After.targets')"/>
</Project>
