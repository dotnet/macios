// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

using System;
using System.Diagnostics.CodeAnalysis;
using Microsoft.CodeAnalysis;

namespace Microsoft.Macios.Transformer.Generator.Attributes;

/// <summary>
/// Struct representing the data of a Binding attribute.
/// </summary>
readonly struct BindingFlagData {
	
	public static string Source = @"// <auto-generated/>
using System;

namespace Microsoft.Macios.Transformer.Generator;

[AttributeUsage(AttributeTargets.Field)]
public class BindingFlagAttribute(AttributeTargets target = AttributeTargets.All) : System.Attribute {
	public AttributeTargets Target { get; } = target;
}
";
	public AttributeTargets Target { get; }

	public BindingFlagData (AttributeTargets target)
	{
		Target = target;	
	}
	
	public static bool TryParse (AttributeData attributeData,
		[NotNullWhen (true)] out BindingFlagData? data)
	{
		data = null;
		var count = attributeData.ConstructorArguments.Length;
		AttributeTargets target;
		switch (count) {
		case 1:
			target = (AttributeTargets) attributeData.ConstructorArguments [0].Value!;
			break;
		default:
			// 0 should not be an option..
			return false;
		}

		data = new (target);
		return true;
	}
}
