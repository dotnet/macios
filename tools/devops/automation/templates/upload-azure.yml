steps:

- checkout: self
  persistCredentials: true

# Download the Html Report that was added by the tests job.
- task: DownloadPipelineArtifact@2
  displayName: Download packages
  inputs:
    patterns: '**'
    allowFailedBuilds: true
    path: $(Build.SourcesDirectory)/packages

- task: AzureFileCopy@3
  displayName: 'Publish package to Azure'
  name: upload
  inputs:
    SourcePath: $(Build.SourcesDirectory)/packages
    azureSubscription:  'Azure Releng (7b4817ae-218f-464a-bab1-a9df2d99e1e5)'
    Destination: AzureBlob
    storage: bosstoragemirror
    ContainerName: wrench
    BlobPrefix: $(Build.SourceBranchName)/$(Build.SourceVersion)/$(Build.BuildId)  # ideally, we would use a variable for this
    outputStorageUri: Parameters.outputStorageUri
    outputStorageContainerSasToken: PackageSasToken

# IMPORTANT - Artifacts have to be uploaded to azure before this step is executed

- template: generate-workspace-info.yml@templates
  parameters:
    GitHubToken: $(GitHub.Token)
    ArtifactDirectory: $(Build.SourcesDirectory)/package-internal

- powershell:
    $execPath=[System.IO.Path]::Combine(
      "$Env:BUILD_SOURCESDIRECTORY",
      "Xamarin.Build.Tasks",
      "tools",
      "BuildTasks",
      "build-tasks.exe")

    if (-not (Test-Path $execPath -PathType Leaf)) {
        Write-Host "Build task not found at $execPath!"
    }

    $maciosPath=[System.IO.Path]::Combine("$Env:BUILD_SOURCESDIRECTORY", "xamarin-macios")

    if (-not (Test-Path $maciosPath -PathType Leaf)) {
        Write-Host "Build task not found at $maciosPath!"
    }

    Write-Host "Contents"
    Dir $Env:BUILD_SOURCESDIRECTORY | Get-Childitem

    Write-Host "Xamarin-macios path $maciosPath"
    Write-Host "Exe path is $execPath"

    Start-Process -FilePath "$execPath" -ArgumentList "artifacts", "-s", "$maciosPath", "-a", "bosstoragemirror", "-c", "$Env:STORAGE_PASS", "-u", "wrench/$Env:VIRTUAL_PATH/package" -Wait
  env:
    VIRTUAL_PATH: $(Build.SourceBranchName)/$(Build.SourceVersion)/$(Build.BuildId)
    GITHUB_AUTH_TOKEN: $(GitHub.Token)
    STORAGE_PASS: $(auth-xamarin-bosstoragemirror-account-key)
  displayName: 'Generate artifacts.json'

- powershell: |
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\tools\devops\automation\scripts\GitHub.psm1
    Import-Module $Env:SYSTEM_DEFAULTWORKINGDIRECTORY\tools\devops\automation\scripts\VSTS.psm1

    Write-Host 'URL = ' + $Env:PARAMETERS_OUTPUTSTORAGEURI

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\xamarin.ios-*.pkg" -PathType Leaf) {
        Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "PKG-Xamarin.iOS"
    }

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\notarized\xamarin.ios-*.pkg" -PathType Leaf) {
       Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "PKG-Xamarin.iOS-notarized"
    } 

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\xamarin.mac-*.pkg" -PathType Leaf) {
       Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "PKG-Xamarin.Mac"
    }

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\xamarin.mac-*.pkg" -PathType Leaf) {
        Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "PKG-Xamarin.Mac-notarized"
    }

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\bundle.zip" -PathType Leaf) {
        Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "bundle.zip"
    }

    if (Test-Path "$Env:SYSTEM_DEFAULTWORKINGDIRECTORY\packages\msbuild.zip" -PathType Leaf) {
        Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "msbuild.zip"
    }

    $nugets =  $files = Get-ChildItem -Path .\ -Filter *.nupkg -File -Name

    foreach ($n in $nugets) {
      Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "$n"
    }

    $msi =  $files = Get-ChildItem -Path .\ -Filter *.msi -File -Name

    foreach ($n in $msi) {
      Set-GitHubStatus -Status "success" -Description "I need to add a url :/" -Context "$n"
    }

  displayName: 'Set GithubStatus'