using System;
using System.IO;
using System.Collections.Generic;
using Xunit;
using Xunit.Abstractions;
using MonoTests.System;
using Monotests_Mono.Data.SqlExpressions;
using MonoTests.System.Net.Http;
using MonoTests.Mono.Data.Tds;
using MonoTests.System.ServiceModel;
using MonoTests.System.Web.Services;


namespace Xamarin.iOS.UnitTests {
	// autogenerated class that uses types from the test assemblies so that
	// they are aot and not linked away.
	public static class RegisterType
	{
		public static bool IsXUnit = false;
		public static Dictionary <string, Type> TypesToRegister = new Dictionary <string, Type> {
			{ "monotouch_System_test.dll", typeof (MonoTests.System.FileStyleUriParserTest)}, 
			{ "monotouch_System.Data_test.dll", typeof (Monotests_Mono.Data.SqlExpressions.DataColumnExprTest)}, 
			{ "monotouch_System.Net.Http_test.dll", typeof (MonoTests.System.Net.Http.ByteArrayContentTest)}, 
			{ "monotouch_Mono.Data.Tds_test.dll", typeof (MonoTests.Mono.Data.Tds.TdsConnectionPoolTest)}, 
			{ "monotouch_System.ServiceModel_test.dll", typeof (MonoTests.System.ServiceModel.FaultExceptionTest)}, 
			{ "monotouch_corlib_test.dll", typeof (MonoTests.System.ActivatorTest)}, 
			{ "monotouch_System.Web.Services_test.dll", typeof (MonoTests.System.Web.Services.WebMethodAttributeTest)}, 

		};

		public static void RegisterTypes () 
		{
			// line used to ensure that the runner is not remove by the linker :/
#if MONOMAC
			Console.WriteLine ($"Got the runner for the linker {typeof(Xunit.Sdk.AllException)}");
#else
			Console.WriteLine ($"Got the runner for the linker {typeof(Xunit.Sdk.TypeUtility)}");
#endif
			foreach (var a in TypesToRegister.Keys) {
				// do something with the type, so that it is not removed
				var assemblyPath = Path.GetFileName (TypesToRegister[a].Assembly.Location);
				Console.WriteLine ($"We are using type {TypesToRegister[a]} from assembly {assemblyPath}");
			}
		}
	}
}