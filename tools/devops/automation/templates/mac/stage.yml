parameters:
# name of the pool that contains the iOS devices
- name: macPool
  type: string

- name: stageName
  type: string

- name: displayName
  type: string

- name: statusContext
  type: string
  default: '10.16'

- name: keyringPass
  type: string

- name: osVersion
  type: string

- name: checkOS
  type: boolean
  default: true

- name: isARM
  type: boolean
  default: false

stages:
- stage: ${{ parameters.stageName }}
  displayName: ${{ parameters.displayName }}
  dependsOn:
  - build_packages
  # we need to have the pkgs built and the device sets to be ran, that is decided via the labels or type of build during the build_packages stage
  condition: and(succeeded(), eq(dependencies.build_packages.outputs['build.configuration.RunDeviceTests'], 'True'))

  jobs:
  - job: run_tests
    displayName: 'macOS tests'
    timeoutInMinutes: 1000
    workspace:
      clean: all

    pool:
      name: ${{ parameters.macPool }}
      demands: 
      - Agent.OS -equals Darwin
      ${{ if eq(parameters.checkOS, true) }}:
        - Agent.OSVersion -equals ${{ parameters.osVersion }}
      ${{ if eq(parameters.isARM, true) }}:
        - macOS.Architecture -equals arm64

    steps:
    - template: build.yml
      parameters:
        statusContext: ${{ parameters.statusContext }}
        keyringPass: ${{ parameters.keyringPass }} 
