# YAML pipeline build definition
# https://devdiv.visualstudio.com/DevDiv/_apps/hub/ms.vss-ciworkflow.build-ci-hub?_a=edit-build-definition&id=13760&view=Tab_Tasks
#
# YAML build pipeline based on the Jenkins multi-stage (main branch) build workflow
# https://jenkins.internalx.com/view/Xamarin.MaciOS/job/macios/job/main/
# https://jenkins.internalx.com/view/Xamarin.MaciOS/job/macios/configure
#
resources:
  repositories:
  - repository: self
    checkoutOptions:
      submodules: true

  - repository: templates
    type: github
    name: xamarin/yaml-templates
    ref: refs/heads/main
    endpoint: xamarin

  - repository: maccore
    type: github
    name: xamarin/maccore
    ref: refs/heads/main
    endpoint: xamarin

  - repository: release-scripts
    type: github
    name: xamarin/release-scripts
    ref: refs/heads/sign-and-notarized 
    endpoint: xamarin

variables:
- group: xamops-azdev-secrets
- group: Xamarin-Secrets
- group: Xamarin Signing
- group: Xamarin Release
- group: Xamarin Notarization
- group: XamarinCompatLab                                     # provisionator-uri setting
- name: GitHub.Token                                          # Override the GitHub.Token setting defined in the Xamarin Release group
  value: $(github--pat--vs-mobiletools-engineering-service2)  # Use a token dedicated to critical production workflows and help avoid GitHub throttling
- name: system.debug
  value: true
- name: SigningKeychain
  value: "builder.keychain"
- name: OSX_KEYCHAIN_PASS                                     # UNDONE: Override the OSX_KEYCHAIN_PASS to use same password as used by the iOS mac pool machines
  value: $(ios-pool-keychain-password)

trigger: none

pr:
  autoCancel: true
  branches:
    include:
    - main
    - d16-*

stages:
- stage: build_packages
  displayName: 'Build'
  jobs:
  - job: build
    displayName: 'Build packages'
    timeoutInMinutes: 1000
    pool:
      name: VSEng-Xamarin-RedmondMacCatalinaBuildPool-iOS-Untrusted
      demands:
      - Agent.OS -equals Darwin
      - Agent.OSVersion -equals 10.15
    workspace:
      clean: all

    steps:
    - template: templates/build-packages.yml

  - job: upload_azure_blob
    displayName: 'Upload packages to Azure'
    timeoutInMinutes: 1000
    dependsOn: build # can start as soon as the tests are done
    condition: succeeded()
    pool:
      name: VSEngDeploymentPool
      demands: agent.os -equals Windows_NT # we need to use a windows machine since vsdrops just works on them and the pool might have diff OS in the agents
      workspace:
        clean: all
    variables:
      # Note the use of single quotes!
      UPLOAD_PREFIX: $[ dependencies.build.outputs["upload.VirtualPath"] ]
    steps:
    - template: templates/upload-azure.yml